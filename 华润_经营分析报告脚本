-- 2019年销售数据增加匹配维度
(DROP TABLE
IF
	EXISTS dw_busi_salebym2019;
CREATE TABLE dw_busi_salebym2019 AS SELECT
T1.*,
T2.STARTEY_CLASSIFY,
T2.COMP_CLASSIFY1,
T2.COMP_CLASSIFY2 
FROM
	ods_ex_busi_salebym2019 T1
	LEFT JOIN ( SELECT DISTINCT STARTEY_CLASSIFY, COMP_CLASSIFY1, COMP_CLASSIFY2, COMPID FROM dim_dxh_company WHERE STARTEY_CLASSIFY IS NOT NULL ) T2 ON T1.`公司编码` = T2.COMPID;)
	
-- 经营分析关键数据-基础数据
(DROP TABLE IF EXISTS DM_BUS_SALE_REPORT;
CREATE TABLE DM_BUS_SALE_REPORT AS 
SELECT
  T1.COMPID,
	T1.BUSNO,
	T1.COMPNAME,
	T1.ORGNAME,
	T1.SXSCS,
	T1.SKLL,
	T1.SNETAMT_NO2,
	T1.SPURAMT_NO2,
	T1.SMAOLI_NO2,
	T1.LY_SXSCS,
	T1.LY_SKLL,
	T1.LY_SNETAMT_NO2,
	T1.LY_SPURAMT_NO2,
	T1.LY_SMAOLI_NO2,
	T1.LM_SXSCS,
	T1.LM_SKLL,
	T1.LM_SNETAMT_NO2,
	T1.LM_SPURAMT_NO2,
	T1.LM_SMAOLI_NO2,
	T0.XSCS,
	T0.KLL,
	T0.NETAMT_NO2,
	T0.PURAMT_NO2,
	T0.MAOLI_NO2,
	T0.LY_XSCS,
	T0.LY_KLL,
	T0.LY_NETAMT_NO2,
	T0.LY_PURAMT_NO2,
	T0.LY_MAOLI_NO2,
	T0.LM_XSCS,
	T0.LM_KLL,
	T0.LM_NETAMT_NO2,
	T0.LM_PURAMT_NO2,
	T0.LM_MAOLI_NO2,
	T2.XSCS AS XSCS_Q3,
	T2.KLL AS KLL_Q3,
	T2.NETAMT_NO2 AS NETAMT_NO2_Q3,
	T2.PURAMT_NO2 AS PURAMT_NO2_Q3,
	T2.MAOLI_NO2 AS MAOLI_NO2_Q3,
	T3.XSCS AS XSCS_Q2,
	T3.KLL AS KLL_Q2,
	T3.NETAMT_NO2 AS NETAMT_NO2_Q2,
	T3.PURAMT_NO2 AS PURAMT_NO2_Q2,
	T3.MAOLI_NO2 AS MAOLI_NO2_Q2,
	T4.XSCS AS XSCS_Q1,
	T4.KLL AS KLL_Q1,
	T4.NETAMT_NO2 AS NETAMT_NO2_Q1,
	T4.PURAMT_NO2 AS PURAMT_NO2_Q1,
	T4.MAOLI_NO2 AS MAOLI_NO2_Q1
FROM   -- 当年累计数据
(SELECT
	COMPID,
	BUSNO,
	COMPNAME,
	ORGNAME,
	SUM( XSCS ) AS SXSCS,
	SUM( KLL ) AS SKLL,
	SUM( NETAMT_NO2 ) AS SNETAMT_NO2,
	SUM( PURAMT_NO2 ) AS SPURAMT_NO2,
	SUM( MAOLI_NO2 ) AS SMAOLI_NO2,
	SUM( LY_XSCS ) AS LY_SXSCS,
	SUM( LY_KLL ) AS LY_SKLL,
	SUM( LY_NETAMT_NO2 ) AS LY_SNETAMT_NO2,
	SUM( LY_PURAMT_NO2 ) AS LY_SPURAMT_NO2,
	SUM( LY_MAOLI_NO2 ) AS LY_SMAOLI_NO2,
	SUM( LM_XSCS ) AS LM_SXSCS,
	SUM( LM_KLL ) AS LM_SKLL,
	SUM( LM_NETAMT_NO2 ) AS LM_SNETAMT_NO2,
	SUM( LM_PURAMT_NO2 ) AS LM_SPURAMT_NO2,
	SUM( LM_MAOLI_NO2 ) AS LM_SMAOLI_NO2
FROM
	(
	SELECT
		COMPID,
		BUSNO,
		ACCMONTH,
		COMPNAME,
		ORGNAME,
		XSCS,
		KLL,
		NETAMT_NO2,
		PURAMT_NO2,
		ROUND( NETAMT_NO2 - PURAMT_NO2, 2 ) AS MAOLI_NO2,
		LY_XSCS,
		LY_KLL,
		LY_NETAMT_NO2,
		LY_PURAMT_NO2,
		ROUND( LY_NETAMT_NO2 - LY_PURAMT_NO2, 2 ) AS LY_MAOLI_NO2,
		LM_XSCS,
		LM_KLL,
		LM_NETAMT_NO2,
		LM_PURAMT_NO2,
		ROUND( LM_NETAMT_NO2 - LM_PURAMT_NO2, 2 ) AS LM_MAOLI_NO2 
	FROM
		ods_t_rpt_sale_m 
	WHERE
		ACCYEAR = 2020 
		AND ACCMONTH < '2020-10-01'
	) T1
	GROUP BY
		COMPID,
	BUSNO,
	COMPNAME,
	ORGNAME)T1
	LEFT JOIN -- 当月数据
	(SELECT
	COMPID,
	BUSNO,
	COMPNAME,
	ORGNAME,
	SUM( XSCS ) AS XSCS,
	SUM( KLL ) AS KLL,
	SUM( NETAMT_NO2 ) AS NETAMT_NO2,
	SUM( PURAMT_NO2 ) AS PURAMT_NO2,
	SUM( MAOLI_NO2 ) AS MAOLI_NO2,
	SUM( LY_XSCS ) AS LY_XSCS,
	SUM( LY_KLL ) AS LY_KLL,
	SUM( LY_NETAMT_NO2 ) AS LY_NETAMT_NO2,
	SUM( LY_PURAMT_NO2 ) AS LY_PURAMT_NO2,
	SUM( LY_MAOLI_NO2 ) AS LY_MAOLI_NO2,
	SUM( LM_XSCS ) AS LM_XSCS,
	SUM( LM_KLL ) AS LM_KLL,
	SUM( LM_NETAMT_NO2 ) AS LM_NETAMT_NO2,
	SUM( LM_PURAMT_NO2 ) AS LM_PURAMT_NO2,
	SUM( LM_MAOLI_NO2 ) AS LM_MAOLI_NO2
FROM
	(
	SELECT
		COMPID,
		BUSNO,
		ACCMONTH,
		COMPNAME,
		ORGNAME,
		XSCS,
		KLL,
		NETAMT_NO2,
		PURAMT_NO2,
		ROUND( NETAMT_NO2 - PURAMT_NO2, 2 ) AS MAOLI_NO2,
		LY_XSCS,
		LY_KLL,
		LY_NETAMT_NO2,
		LY_PURAMT_NO2,
		ROUND( LY_NETAMT_NO2 - LY_PURAMT_NO2, 2 ) AS LY_MAOLI_NO2,
		LM_XSCS,
		LM_KLL,
		LM_NETAMT_NO2,
		LM_PURAMT_NO2,
		ROUND( LM_NETAMT_NO2 - LM_PURAMT_NO2, 2 ) AS LM_MAOLI_NO2 
	FROM
		ods_t_rpt_sale_m 
	WHERE
		ACCYEAR = 2020 
		AND ACCMONTH = '2020-09-01'
	) T1
	GROUP BY
		COMPID,
	BUSNO,
	COMPNAME,
	ORGNAME)T0 ON T1.COMPID = T0.COMPID AND T1.BUSNO = T0.BUSNO
	LEFT JOIN -- 第三季度数据
	(
	SELECT
		T1.COMPID,
		T1.BUSNO,
		T1.COMPNAME,
		T1.ORGNAME,
		SUM( T1.XSCS ) AS XSCS,
		SUM( T1.KLL ) AS KLL,
		SUM( T1.NETAMT_NO2 ) AS NETAMT_NO2,
		SUM( T1.PURAMT_NO2 ) AS PURAMT_NO2,
		SUM( T1.MAOLI_NO2 ) AS MAOLI_NO2 
	FROM
		(
		SELECT
			COMPID,
			BUSNO,
			ACCMONTH,
			COMPNAME,
			ORGNAME,
			XSCS,
			KLL,
			NETAMT_NO2,
			PURAMT_NO2,
			ROUND( NETAMT_NO2 - PURAMT_NO2, 2 ) AS MAOLI_NO2 
		FROM
			ods_t_rpt_sale_m 
		WHERE
		ACCMONTH IN ( '2020-07-01', '2020-08-01', '2020-09-01' )) T1 
	GROUP BY
		T1.COMPID,
		T1.BUSNO,
		T1.COMPNAME,
		T1.ORGNAME
	) T2 ON T1.COMPID = T2.COMPID AND T1.BUSNO = T2.BUSNO
	LEFT JOIN -- 第二季度数据
	(
	SELECT
		T1.COMPID,
		T1.BUSNO,
		T1.COMPNAME,
		T1.ORGNAME,
		SUM( T1.XSCS ) AS XSCS,
		SUM( T1.KLL ) AS KLL,
		SUM( T1.NETAMT_NO2 ) AS NETAMT_NO2,
		SUM( T1.PURAMT_NO2 ) AS PURAMT_NO2,
		SUM( T1.MAOLI_NO2 ) AS MAOLI_NO2 
	FROM
		(
		SELECT
			COMPID,
			BUSNO,
			ACCMONTH,
			COMPNAME,
			ORGNAME,
			XSCS,
			KLL,
			NETAMT_NO2,
			PURAMT_NO2,
			ROUND( NETAMT_NO2 - PURAMT_NO2, 2 ) AS MAOLI_NO2 
		FROM
			ods_t_rpt_sale_m 
		WHERE
		ACCMONTH IN ( '2020-04-01', '2020-05-01', '2020-06-01' )) T1 
	GROUP BY
		T1.COMPID,
		T1.BUSNO,
		T1.COMPNAME,
		T1.ORGNAME
	) T3 ON T1.COMPID = T3.COMPID AND T1.BUSNO = T3.BUSNO
	LEFT JOIN -- 第一季度数据
	(
	SELECT
		T1.COMPID,
		T1.BUSNO,
		T1.COMPNAME,
		T1.ORGNAME,
		SUM( T1.XSCS ) AS XSCS,
		SUM( T1.KLL ) AS KLL,
		SUM( T1.NETAMT_NO2 ) AS NETAMT_NO2,
		SUM( T1.PURAMT_NO2 ) AS PURAMT_NO2,
		SUM( T1.MAOLI_NO2 ) AS MAOLI_NO2 
	FROM
		(
		SELECT
			COMPID,
			BUSNO,
			ACCMONTH,
			COMPNAME,
			ORGNAME,
			XSCS,
			KLL,
			NETAMT_NO2,
			PURAMT_NO2,
			ROUND( NETAMT_NO2 - PURAMT_NO2, 2 ) AS MAOLI_NO2 
		FROM
			ods_t_rpt_sale_m 
		WHERE
		ACCMONTH IN ( '2020-01-01', '2020-02-01', '2020-03-01' )) T1 
	GROUP BY
		T1.COMPID,
		T1.BUSNO,
		T1.COMPNAME,
		T1.ORGNAME
	) T4 ON T1.COMPID = T4.COMPID AND T1.BUSNO = T4.BUSNO
)

-- 战略管控层级数据展示：战区划分
(DROP TABLE IF EXISTS DM_COMP_SALE_REPORT;
CREATE TABLE DM_COMP_SALE_REPORT AS 
SELECT
	T1.STARTEY_CLASSIFY AS 管控类型,
	T1.COMP_CLASSIFY1 AS 省区划分,
	SUM(T1.COMP_BUSNO) AS 在营机构数,
  SUM(T1.QCOMP_BUSNO) AS 当季在营机构数,
	SUM(T1.SCOMP_BUSNO) AS 累计在营机构数,
	ROUND(SUM(CUR_SALES_BUDGET),2) AS 年度销售预算,
	ROUND(SUM(CUR_SALES_BUDGET)/4,2) AS 当季销售预算,
	ROUND(SUM(CUR_SALES_BUDGET)/12,2) AS 当月销售预算,
	ROUND( SUM( T1.NETAMT_NO2 ), 2 ) AS 当月销售金额,
	ROUND( SUM( T1.NETAMT_NO2_Q3 ), 2 ) AS 当季销售金额,
	ROUND( SUM( T1.SNETAMT_NO2 ), 2 ) AS 累计销售金额,
	ROUND( SUM( T4.LY_NETAMT_NO2 ), 2 ) AS 同期销售金额,
  ROUND( SUM( Q3.NETAMT_NO2_LQ3), 2 ) AS 同期季度销售金额,
	ROUND( SUM( T3.LY_SNETAMT_NO2 ), 2 ) AS 同期累计销售金额,
	ROUND( SUM( T1.MAOLI_NO2 ), 2 ) AS 当月毛利金额,
	ROUND( SUM( T1.MAOLI_NO2_Q3 ), 2 ) AS 当季毛利金额,
	ROUND( SUM( T1.SMAOLI_NO2 ), 2 ) AS 累计毛利金额,
	ROUND( SUM( T4.LY_MAOLI_NO2 ), 2 ) AS 同期毛利金额,
  ROUND( SUM( Q3.MAOLI_NO2_LQ3), 2 ) AS 同期季度毛利金额,
	ROUND( SUM( T3.LY_SMAOLI_NO2 ), 2 ) AS 同期累计毛利金额,
	ROUND( SUM( T1.LM_NETAMT_NO2 ), 2 ) AS 上月销售金额,
	ROUND( SUM( T1.LM_MAOLI_NO2 ), 2 ) AS 上月毛利金额,
	ROUND( SUM( Q2.NETAMT_NO2_LQ2), 2 ) AS 上季度销售金额,  
	ROUND( SUM( Q2.MAOLI_NO2_LQ2), 2 ) AS 上季度毛利金额,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T4.LY_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额同比,
	ROUND( SUM( T1.NETAMT_NO2 )*12/ SUM(T2.CUR_SALES_BUDGET)* 100, 2 ) AS 销售金额达成,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T1.LM_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额环比,
	ROUND( SUM(T1.NETAMT_NO2_Q3)/ SUM( Q3.NETAMT_NO2_LQ3)* 100-100, 2 ) AS 季度销售金额同比,
	ROUND( SUM(T1.NETAMT_NO2_Q3 )*4/ SUM(T2.CUR_SALES_BUDGET)* 100, 2 ) AS 季度销售金额达成,
	ROUND( SUM(T1.NETAMT_NO2_Q3)/ SUM( Q2.NETAMT_NO2_LQ2)* 100-100, 2 ) AS 季度销售金额环比,
	ROUND( SUM(T1.SNETAMT_NO2)/ SUM(T3.LY_SNETAMT_NO2)* 100-100, 2 ) AS 累计销售同比,
	ROUND( SUM( T1.SNETAMT_NO2 )/ t2.CUR_SALES_BUDGET* 100, 2 ) AS 累计销售达成,
	ROUND( SUM(T1.MAOLI_NO2 ) / SUM(T4.LY_MAOLI_NO2)* 100-100, 2 ) AS 毛利金额同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.LM_MAOLI_NO2 )* 100-100, 2 ) AS 毛利金额环比,
	ROUND( SUM(T1.SMAOLI_NO2 )/ SUM( T3.LY_SMAOLI_NO2 )* 100-100, 2 ) AS 累计毛利同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.NETAMT_NO2 )* 100, 2 ) AS 毛利率,
	ROUND( SUM( T1.MAOLI_NO2_Q3 )/ SUM( T1.NETAMT_NO2_Q3 )* 100, 2 ) AS 季度毛利率,
	ROUND( SUM( T1.SMAOLI_NO2 )/ SUM( T1.SNETAMT_NO2 )* 100, 2 ) AS 累计毛利率,
	ROUND((
			SUM( T1.MAOLI_NO2 )/ SUM(
			T1.NETAMT_NO2) - SUM( T4.LY_MAOLI_NO2 )/ SUM(T4.LY_NETAMT_NO2 ))* 100,
		2 
	) AS 毛利率同比差,
	ROUND((
			SUM( T1.MAOLI_NO2_Q3 )/ SUM(
			T1.NETAMT_NO2_Q3) - SUM(Q3.MAOLI_NO2_LQ3)/ SUM(Q3.NETAMT_NO2_LQ3 ))* 100,
		2 
	) AS 季度毛利率同比差,
	ROUND((
			SUM( T1.SMAOLI_NO2 )/ SUM(
			T1.SNETAMT_NO2) - SUM( T3.LY_SMAOLI_NO2  )/ SUM(T3.LY_SNETAMT_NO2  ))* 100,
		2 
	) AS 累计毛利率同比差 	
FROM
	(
	SELECT
	  T1.COMP_CLASSIFY1,
		T1.STARTEY_CLASSIFY,
		COUNT(DISTINCT T1.BUSNO) AS SCOMP_BUSNO,
		SUM(IF(T1.NETAMT_NO2 IS NULL,0,1) ) AS COMP_BUSNO,
		SUM(IF(T1.NETAMT_NO2_Q3 IS NULL,0,1) ) AS QCOMP_BUSNO,
		ROUND(SUM(T1.SNETAMT_NO2)/10000,2) AS SNETAMT_NO2,
		ROUND(SUM(T1.SPURAMT_NO2)/10000,2) AS SPURAMT_NO2,
		ROUND(SUM(T1.SMAOLI_NO2)/10000,2) AS SMAOLI_NO2,
		ROUND(SUM(T1.NETAMT_NO2)/10000,2) AS NETAMT_NO2,
		ROUND(SUM(T1.PURAMT_NO2)/10000,2) AS PURAMT_NO2,
		ROUND(SUM(T1.MAOLI_NO2)/10000,2) AS MAOLI_NO2,
		ROUND(SUM(T1.LM_NETAMT_NO2)/10000,2) AS LM_NETAMT_NO2,
		ROUND(SUM(T1.LM_PURAMT_NO2)/10000,2) AS LM_PURAMT_NO2,
		ROUND(SUM(T1.LM_MAOLI_NO2)/10000,2) AS LM_MAOLI_NO2,
		ROUND(SUM(T1.NETAMT_NO2_Q2)/10000,2) AS NETAMT_NO2_Q2,
		ROUND(SUM(T1.PURAMT_NO2_Q2)/10000,2) AS PURAMT_NO2_Q2,
		ROUND(SUM(T1.MAOLI_NO2_Q2)/10000,2) AS MAOLI_NO2_Q2,
		ROUND(SUM(T1.NETAMT_NO2_Q3)/10000,2) AS NETAMT_NO2_Q3,
		ROUND(SUM(T1.PURAMT_NO2_Q3)/10000,2) AS PURAMT_NO2_Q3,
		ROUND(SUM(T1.MAOLI_NO2_Q3)/10000,2) AS MAOLI_NO2_Q3
	FROM
	(SELECT
		T2.COMP_CLASSIFY1,
		T2.STARTEY_CLASSIFY,
		T1.COMPID,
		T1.BUSNO,
-- 		T1.SXSCS,
-- 		T1.SKLL,
		T1.SNETAMT_NO2,
		T1.SPURAMT_NO2,
		T1.SMAOLI_NO2,
-- 		T1.LY_SXSCS,
-- 		T1.LY_SKLL,
-- 		T1.LY_SNETAMT_NO2,
-- 		T1.LY_SPURAMT_NO2,
-- 		T1.LY_SMAOLI_NO2,
-- 		T1.LM_SXSCS,
-- 		T1.LM_SKLL,
-- 		T1.LM_SNETAMT_NO2,
-- 		T1.LM_SPURAMT_NO2,
-- 		T1.LM_SMAOLI_NO2,
		T1.XSCS,
		T1.KLL,
		T1.NETAMT_NO2,
		T1.PURAMT_NO2,
		T1.MAOLI_NO2,
-- 		T1.LY_XSCS,
-- 		T1.LY_KLL,
--  		T1.LY_NETAMT_NO2,
-- 		T1.LY_PURAMT_NO2,
-- 		T1.LY_MAOLI_NO2,
		T1.LM_XSCS,
		T1.LM_KLL,
		T1.LM_NETAMT_NO2,
		T1.LM_PURAMT_NO2,
		T1.LM_MAOLI_NO2,
	  T1.XSCS_Q1,
		T1.KLL_Q1,
		T1.NETAMT_NO2_Q1,
		T1.PURAMT_NO2_Q1,
		T1.MAOLI_NO2_Q1,
	  T1.XSCS_Q2,
		T1.KLL_Q2,
		T1.NETAMT_NO2_Q2,
		T1.PURAMT_NO2_Q2,
		T1.MAOLI_NO2_Q2,
	  T1.XSCS_Q3,
		T1.KLL_Q3,
		T1.NETAMT_NO2_Q3,
		T1.PURAMT_NO2_Q3,
		T1.MAOLI_NO2_Q3	
	FROM
		DM_BUS_SALE_REPORT T1
		LEFT JOIN DIM_DXH_COMPANY T2 ON T1.COMPID = T2.COMPID 
	WHERE
		T2.STARTEY_CLASSIFY ='直管' 

		-- AND T2.COMP_CLASSIFY1 = '湖南'
	) T1 
GROUP BY
T1.STARTEY_CLASSIFY,
T1.COMP_CLASSIFY1)T1
LEFT JOIN -- 销售任务预算 
(SELECT COMP_CLASSIFY1_TEMP, SUM( SALES_BUDGET ) AS CUR_SALES_BUDGET FROM dw_comp_sale_goal GROUP BY COMP_CLASSIFY1_TEMP HAVING COMP_CLASSIFY1_TEMP IS NOT NULL ) t2 ON t1.COMP_CLASSIFY1 = t2.COMP_CLASSIFY1_TEMP
LEFT JOIN -- 去年同年累计无税销售金额
(SELECT t1.`区域划分` AS COMP_CLASSIFY1_TEMP, COUNT(DISTINCT t1.`机构编码`) AS LY_SCOMP_BUSNO, SUM(t1.`无税销售`) AS LY_SNETAMT_NO2, SUM(t1.`无税毛利额`) AS LY_SMAOLI_NO2 FROM (SELECT `区域划分`,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份<10)t1 GROUP BY t1.`区域划分`)T3 ON t1.COMP_CLASSIFY1 = t3.COMP_CLASSIFY1_TEMP
LEFT JOIN -- 去年同年同月无税销售金额
(SELECT t1.`区域划分` AS COMP_CLASSIFY1_TEMP, COUNT(DISTINCT t1.`机构编码`) AS LY_COMP_BUSNO, SUM(t1.`无税销售`) AS LY_NETAMT_NO2, SUM(t1.`无税毛利额`) AS LY_MAOLI_NO2 FROM (SELECT `区域划分`,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份=9)t1 GROUP BY t1.`区域划分`)T4 ON t1.COMP_CLASSIFY1 = t4.COMP_CLASSIFY1_TEMP
LEFT JOIN -- 去年同年一季度无税销售金额
(SELECT t1.`区域划分` AS COMP_CLASSIFY1_TEMP, COUNT(DISTINCT  t1.`机构编码`) AS COMP_BUSNO_LQ1, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ1, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ1 FROM (SELECT `区域划分`,`机构编码`,月份,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 1 AND 3 )t1 GROUP BY t1.`区域划分`)Q1 ON t1.COMP_CLASSIFY1 = Q1.COMP_CLASSIFY1_TEMP
 LEFT JOIN -- 去年同年二季度无税销售金额
(SELECT t1.`区域划分` AS COMP_CLASSIFY1_TEMP, COUNT(DISTINCT t1.`机构编码`) AS COMP_BUSNO_LQ2, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ2, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ2 FROM (SELECT `区域划分`,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 4 AND 6)t1 GROUP BY t1.`区域划分`)Q2 ON t1.COMP_CLASSIFY1 = Q2.COMP_CLASSIFY1_TEMP
 LEFT JOIN -- 去年同年三季度无税销售金额
 (SELECT t1.`区域划分` AS COMP_CLASSIFY1_TEMP, COUNT(DISTINCT t1.`机构编码`) AS COMP_BUSNO_LQ3, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ3, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ3 FROM (SELECT `区域划分`,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 7 AND 9)t1 GROUP BY t1.`区域划分`)Q3 ON t1.COMP_CLASSIFY1 = Q3.COMP_CLASSIFY1_TEMP
GROUP BY
T1.STARTEY_CLASSIFY,
T1.COMP_CLASSIFY1;)


-- 战略管控层级数据展示：战略管控
(DROP TABLE IF EXISTS DM_STARTEY_SALE_REPORT;
CREATE TABLE DM_STARTEY_SALE_REPORT AS 
	SELECT
	T1.STARTEY_CLASSIFY AS 管控类型,
	-- T1.COMP_CLASSIFY1 AS 省区划分,
	SUM(T1.COMP_BUSNO) AS 在营机构数,
  SUM(T1.QCOMP_BUSNO) AS 当季在营机构数,
	SUM(T1.SCOMP_BUSNO) AS 累计在营机构数,
	ROUND(SUM(CUR_SALES_BUDGET),2) AS 年度销售预算,
	ROUND(SUM(CUR_SALES_BUDGET)/4,2) AS 当季销售预算,
	ROUND(SUM(CUR_SALES_BUDGET)/12,2) AS 当月销售预算,
	ROUND( SUM( T1.NETAMT_NO2 ), 2 ) AS 当月销售金额,
	ROUND( SUM( T1.NETAMT_NO2_Q3 ), 2 ) AS 当季销售金额,
	ROUND( SUM( T1.SNETAMT_NO2 ), 2 ) AS 累计销售金额,
	ROUND( SUM( T4.LY_NETAMT_NO2 ), 2 ) AS 同期销售金额,
  ROUND( SUM( Q3.NETAMT_NO2_LQ3), 2 ) AS 同期季度销售金额,
	ROUND( SUM( T3.LY_SNETAMT_NO2 ), 2 ) AS 同期累计销售金额,
	ROUND( SUM( T1.MAOLI_NO2 ), 2 ) AS 当月毛利金额,
	ROUND( SUM( T1.MAOLI_NO2_Q3 ), 2 ) AS 当季毛利金额,
	ROUND( SUM( T1.SMAOLI_NO2 ), 2 ) AS 累计毛利金额,
	ROUND( SUM( T4.LY_MAOLI_NO2 ), 2 ) AS 同期毛利金额,
  ROUND( SUM( Q3.MAOLI_NO2_LQ3), 2 ) AS 同期季度毛利金额,
	ROUND( SUM( T3.LY_SMAOLI_NO2 ), 2 ) AS 同期累计毛利金额,
	ROUND( SUM( T1.LM_NETAMT_NO2 ), 2 ) AS 上月销售金额,
	ROUND( SUM( T1.LM_MAOLI_NO2 ), 2 ) AS 上月毛利金额,
	ROUND( SUM( Q2.NETAMT_NO2_LQ2), 2 ) AS 上季度销售金额,  
	ROUND( SUM( Q2.MAOLI_NO2_LQ2), 2 ) AS 上季度毛利金额,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T4.LY_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额同比,
	ROUND( SUM( T1.NETAMT_NO2 )*12/ SUM(T2.CUR_SALES_BUDGET)* 100, 2 ) AS 销售金额达成,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T1.LM_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额环比,
	ROUND( SUM(T1.NETAMT_NO2_Q3)/ SUM( Q3.NETAMT_NO2_LQ3)* 100-100, 2 ) AS 季度销售金额同比,
	ROUND( SUM(T1.NETAMT_NO2_Q3 )*4/ SUM(T2.CUR_SALES_BUDGET)* 100, 2 ) AS 季度销售金额达成,
	ROUND( SUM(T1.NETAMT_NO2_Q3)/ SUM( Q2.NETAMT_NO2_LQ2)* 100-100, 2 ) AS 季度销售金额环比,
	ROUND( SUM(T1.SNETAMT_NO2)/ SUM(T3.LY_SNETAMT_NO2)* 100-100, 2 ) AS 累计销售同比,
	ROUND( SUM( T1.SNETAMT_NO2 )/ t2.CUR_SALES_BUDGET* 100, 2 ) AS 累计销售达成,
	ROUND( SUM(T1.MAOLI_NO2 ) / SUM(T4.LY_MAOLI_NO2)* 100-100, 2 ) AS 毛利金额同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.LM_MAOLI_NO2 )* 100-100, 2 ) AS 毛利金额环比,
	ROUND( SUM(T1.SMAOLI_NO2 )/ SUM( T3.LY_SMAOLI_NO2 )* 100-100, 2 ) AS 累计毛利同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.NETAMT_NO2 )* 100, 2 ) AS 毛利率,
	ROUND( SUM( T1.MAOLI_NO2_Q3 )/ SUM( T1.NETAMT_NO2_Q3 )* 100, 2 ) AS 季度毛利率,
	ROUND( SUM( T1.SMAOLI_NO2 )/ SUM( T1.SNETAMT_NO2 )* 100, 2 ) AS 累计毛利率,
	ROUND((
			SUM( T1.MAOLI_NO2 )/ SUM(
			T1.NETAMT_NO2) - SUM( T4.LY_MAOLI_NO2 )/ SUM(T4.LY_NETAMT_NO2 ))* 100,
		2 
	) AS 毛利率同比差,
	ROUND((
			SUM( T1.MAOLI_NO2_Q3 )/ SUM(
			T1.NETAMT_NO2_Q3) - SUM(Q3.MAOLI_NO2_LQ3)/ SUM(Q3.NETAMT_NO2_LQ3 ))* 100,
		2 
	) AS 季度毛利率同比差,
	ROUND((
			SUM( T1.SMAOLI_NO2 )/ SUM(
			T1.SNETAMT_NO2) - SUM( T3.LY_SMAOLI_NO2  )/ SUM(T3.LY_SNETAMT_NO2  ))* 100,
		2 
	) AS 累计毛利率同比差 	
FROM
	(
	SELECT
	 --  T1.COMP_CLASSIFY1,
		T1.STARTEY_CLASSIFY,
		COUNT(DISTINCT T1.BUSNO) AS SCOMP_BUSNO,
		SUM(IF(T1.NETAMT_NO2 IS NULL,0,1) ) AS COMP_BUSNO,
		SUM(IF(T1.NETAMT_NO2_Q3 IS NULL,0,1) ) AS QCOMP_BUSNO,
		ROUND(SUM(T1.SNETAMT_NO2)/10000,2) AS SNETAMT_NO2,
		ROUND(SUM(T1.SPURAMT_NO2)/10000,2) AS SPURAMT_NO2,
		ROUND(SUM(T1.SMAOLI_NO2)/10000,2) AS SMAOLI_NO2,
		ROUND(SUM(T1.NETAMT_NO2)/10000,2) AS NETAMT_NO2,
		ROUND(SUM(T1.PURAMT_NO2)/10000,2) AS PURAMT_NO2,
		ROUND(SUM(T1.MAOLI_NO2)/10000,2) AS MAOLI_NO2,
		ROUND(SUM(T1.LM_NETAMT_NO2)/10000,2) AS LM_NETAMT_NO2,
		ROUND(SUM(T1.LM_PURAMT_NO2)/10000,2) AS LM_PURAMT_NO2,
		ROUND(SUM(T1.LM_MAOLI_NO2)/10000,2) AS LM_MAOLI_NO2,
		ROUND(SUM(T1.NETAMT_NO2_Q2)/10000,2) AS NETAMT_NO2_Q2,
		ROUND(SUM(T1.PURAMT_NO2_Q2)/10000,2) AS PURAMT_NO2_Q2,
		ROUND(SUM(T1.MAOLI_NO2_Q2)/10000,2) AS MAOLI_NO2_Q2,
		ROUND(SUM(T1.NETAMT_NO2_Q3)/10000,2) AS NETAMT_NO2_Q3,
		ROUND(SUM(T1.PURAMT_NO2_Q3)/10000,2) AS PURAMT_NO2_Q3,
		ROUND(SUM(T1.MAOLI_NO2_Q3)/10000,2) AS MAOLI_NO2_Q3
	FROM
	(SELECT
		T2.COMP_CLASSIFY1,
		T2.STARTEY_CLASSIFY,
		T1.COMPID,
		T1.BUSNO,
-- 		T1.SXSCS,
-- 		T1.SKLL,
		T1.SNETAMT_NO2,
		T1.SPURAMT_NO2,
		T1.SMAOLI_NO2,
-- 		T1.LY_SXSCS,
-- 		T1.LY_SKLL,
-- 		T1.LY_SNETAMT_NO2,
-- 		T1.LY_SPURAMT_NO2,
-- 		T1.LY_SMAOLI_NO2,
-- 		T1.LM_SXSCS,
-- 		T1.LM_SKLL,
-- 		T1.LM_SNETAMT_NO2,
-- 		T1.LM_SPURAMT_NO2,
-- 		T1.LM_SMAOLI_NO2,
		T1.XSCS,
		T1.KLL,
		T1.NETAMT_NO2,
		T1.PURAMT_NO2,
		T1.MAOLI_NO2,
-- 		T1.LY_XSCS,
-- 		T1.LY_KLL,
--  		T1.LY_NETAMT_NO2,
-- 		T1.LY_PURAMT_NO2,
-- 		T1.LY_MAOLI_NO2,
		T1.LM_XSCS,
		T1.LM_KLL,
		T1.LM_NETAMT_NO2,
		T1.LM_PURAMT_NO2,
		T1.LM_MAOLI_NO2,
	  T1.XSCS_Q1,
		T1.KLL_Q1,
		T1.NETAMT_NO2_Q1,
		T1.PURAMT_NO2_Q1,
		T1.MAOLI_NO2_Q1,
	  T1.XSCS_Q2,
		T1.KLL_Q2,
		T1.NETAMT_NO2_Q2,
		T1.PURAMT_NO2_Q2,
		T1.MAOLI_NO2_Q2,
	  T1.XSCS_Q3,
		T1.KLL_Q3,
		T1.NETAMT_NO2_Q3,
		T1.PURAMT_NO2_Q3,
		T1.MAOLI_NO2_Q3	
	FROM
		DM_BUS_SALE_REPORT T1
-- 		LEFT JOIN DIM_DXH_COMPANY T2 ON T1.COMPID = T2.COMPID 
-- 	WHERE
-- 		T2.STARTEY_CLASSIFY <> '无' 
-- 		-- AND T2.COMP_CLASSIFY1 = '湖南'
			LEFT JOIN DIM_DXH_COMPANY T2 ON T1.COMPID = T2.COMPID
		LEFT JOIN DIM_DXH_BUSI T3 ON T1.BUSNO = T3.BUSNO 
	WHERE
		-- T2.STARTEY_CLASSIFY IN '直管' 
	T2.COMP_CLASSIFY1 IN ('北京','山东','武汉三九','华东区域')
AND T3.org_dtp_type ='社区药房'
	) T1 
GROUP BY
T1.STARTEY_CLASSIFY
-- T1.COMP_CLASSIFY1
)T1
LEFT JOIN -- 销售任务预算 
(SELECT STARTEY_CLASSIFY_TEMP, SUM( SALES_BUDGET ) AS CUR_SALES_BUDGET FROM dw_comp_sale_goal GROUP BY STARTEY_CLASSIFY_TEMP -- HAVING COMP_CLASSIFY1_TEMP IS NOT NULL 
) t2 ON t1.STARTEY_CLASSIFY = t2.STARTEY_CLASSIFY_TEMP
LEFT JOIN -- 去年同年累计无税销售金额
(SELECT t1.STARTEY_CLASSIFY AS STARTEY_CLASSIFY_TEMP, COUNT(DISTINCT t1.`机构编码`) AS LY_SCOMP_BUSNO, SUM(t1.`无税销售`) AS LY_SNETAMT_NO2, SUM(t1.`无税毛利额`) AS LY_SMAOLI_NO2 FROM (SELECT T1.STARTEY_CLASSIFY,T1.`机构编码`,IF(T1.`无税销售` IS NULL,0,T1.`无税销售`*1) AS `无税销售` ,IF(T1.`无税毛利额` IS NULL,0,T1.`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 T1
				LEFT JOIN DIM_DXH_BUSI T2 ON T1.`机构编码` = T2.BUSNO 
			WHERE
				T1.月份 < 10 
AND T2.org_dtp_type = '社区药房' 
				)t1 GROUP BY t1.STARTEY_CLASSIFY)T3 ON t1.STARTEY_CLASSIFY = t3.STARTEY_CLASSIFY_TEMP
LEFT JOIN -- 去年同年同月无税销售金额
(SELECT t1.STARTEY_CLASSIFY AS STARTEY_CLASSIFY_TEMP, COUNT(DISTINCT t1.`机构编码`) AS LY_COMP_BUSNO, SUM(t1.`无税销售`) AS LY_NETAMT_NO2, SUM(t1.`无税毛利额`) AS LY_MAOLI_NO2 FROM (SELECT T1.STARTEY_CLASSIFY,T1.`机构编码`,IF(T1.`无税销售` IS NULL,0,T1.`无税销售`*1) AS `无税销售` ,IF(T1.`无税毛利额` IS NULL,0,T1.`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 T1 LEFT JOIN DIM_DXH_BUSI T2 ON T1.`机构编码` = T2.BUSNO WHERE T1.月份=9 
AND T2.org_dtp_type = '社区药房'
)t1 GROUP BY t1.STARTEY_CLASSIFY)T4 ON t1.STARTEY_CLASSIFY = t4.STARTEY_CLASSIFY_TEMP
LEFT JOIN -- 去年同年一季度无税销售金额
(SELECT t1.STARTEY_CLASSIFY AS STARTEY_CLASSIFY_TEMP, COUNT(DISTINCT  t1.`机构编码`) AS COMP_BUSNO_LQ1, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ1, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ1 FROM (SELECT STARTEY_CLASSIFY,`机构编码`,月份,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 1 AND 3 )t1 GROUP BY t1.STARTEY_CLASSIFY)Q1 ON t1.STARTEY_CLASSIFY = Q1.STARTEY_CLASSIFY_TEMP
 LEFT JOIN -- 去年同年二季度无税销售金额
(SELECT t1.STARTEY_CLASSIFY AS STARTEY_CLASSIFY_TEMP, COUNT(DISTINCT t1.`机构编码`) AS COMP_BUSNO_LQ2, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ2, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ2 FROM (SELECT STARTEY_CLASSIFY,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 4 AND 6)t1 GROUP BY t1.STARTEY_CLASSIFY)Q2 ON t1.STARTEY_CLASSIFY = Q2.STARTEY_CLASSIFY_TEMP
 LEFT JOIN -- 去年同年三季度无税销售金额
 (SELECT t1.STARTEY_CLASSIFY AS STARTEY_CLASSIFY_TEMP, COUNT(DISTINCT t1.`机构编码`) AS COMP_BUSNO_LQ3, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ3, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ3 FROM (SELECT STARTEY_CLASSIFY,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 7 AND 9)t1 GROUP BY t1.STARTEY_CLASSIFY)Q3 ON t1.STARTEY_CLASSIFY = Q3.STARTEY_CLASSIFY_TEMP
GROUP BY
T1.STARTEY_CLASSIFY;
-- T1.COMP_CLASSIFY1;
)


-- 战略管控层级数据展示：全国
(DROP TABLE IF EXISTS DM_total_SALE_REPORT;
CREATE TABLE DM_total_SALE_REPORT AS 
	SELECT
-- 	T1.STARTEY_CLASSIFY AS 管控类型,
	-- T1.COMP_CLASSIFY1 AS 省区划分,
	SUM(T1.COMP_BUSNO) AS 在营机构数,
  SUM(T1.QCOMP_BUSNO) AS 当季在营机构数,
	SUM(T1.SCOMP_BUSNO) AS 累计在营机构数,
	ROUND(SUM(CUR_SALES_BUDGET),2) AS 年度销售预算,
	ROUND(SUM(CUR_SALES_BUDGET)/4,2) AS 当季销售预算,
	ROUND(SUM(CUR_SALES_BUDGET)/12,2) AS 当月销售预算,
	ROUND( SUM( T1.NETAMT_NO2 ), 2 ) AS 当月销售金额,
	ROUND( SUM( T1.NETAMT_NO2_Q3 ), 2 ) AS 当季销售金额,
	ROUND( SUM( T1.SNETAMT_NO2 ), 2 ) AS 累计销售金额,
	ROUND( SUM( T4.LY_NETAMT_NO2 ), 2 ) AS 同期销售金额,
  ROUND( SUM( Q3.NETAMT_NO2_LQ3), 2 ) AS 同期季度销售金额,
	ROUND( SUM( T3.LY_SNETAMT_NO2 ), 2 ) AS 同期累计销售金额,
	ROUND( SUM( T1.MAOLI_NO2 ), 2 ) AS 当月毛利金额,
	ROUND( SUM( T1.MAOLI_NO2_Q3 ), 2 ) AS 当季毛利金额,
	ROUND( SUM( T1.SMAOLI_NO2 ), 2 ) AS 累计毛利金额,
	ROUND( SUM( T4.LY_MAOLI_NO2 ), 2 ) AS 同期毛利金额,
  ROUND( SUM( Q3.MAOLI_NO2_LQ3), 2 ) AS 同期季度毛利金额,
	ROUND( SUM( T3.LY_SMAOLI_NO2 ), 2 ) AS 同期累计毛利金额,
	ROUND( SUM( T1.LM_NETAMT_NO2 ), 2 ) AS 上月销售金额,
	ROUND( SUM( T1.LM_MAOLI_NO2 ), 2 ) AS 上月毛利金额,
	ROUND( SUM( Q2.NETAMT_NO2_LQ2), 2 ) AS 上季度销售金额,  
	ROUND( SUM( Q2.MAOLI_NO2_LQ2), 2 ) AS 上季度毛利金额,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T4.LY_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额同比,
	ROUND( SUM( T1.NETAMT_NO2 )*12/ SUM(T2.CUR_SALES_BUDGET)* 100, 2 ) AS 销售金额达成,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T1.LM_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额环比,
	ROUND( SUM(T1.NETAMT_NO2_Q3)/ SUM( Q3.NETAMT_NO2_LQ3)* 100-100, 2 ) AS 季度销售金额同比,
	ROUND( SUM(T1.NETAMT_NO2_Q3 )*4/ SUM(T2.CUR_SALES_BUDGET)* 100, 2 ) AS 季度销售金额达成,
	ROUND( SUM(T1.NETAMT_NO2_Q3)/ SUM( Q2.NETAMT_NO2_LQ2)* 100-100, 2 ) AS 季度销售金额环比,
	ROUND( SUM(T1.SNETAMT_NO2)/ SUM(T3.LY_SNETAMT_NO2)* 100-100, 2 ) AS 累计销售同比,
	ROUND( SUM( T1.SNETAMT_NO2 )/ t2.CUR_SALES_BUDGET* 100, 2 ) AS 累计销售达成,
	ROUND( SUM(T1.MAOLI_NO2 ) / SUM(T4.LY_MAOLI_NO2)* 100-100, 2 ) AS 毛利金额同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.LM_MAOLI_NO2 )* 100-100, 2 ) AS 毛利金额环比,
	ROUND( SUM(T1.SMAOLI_NO2 )/ SUM( T3.LY_SMAOLI_NO2 )* 100-100, 2 ) AS 累计毛利同比,
ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.NETAMT_NO2 )* 100, 2 ) AS 毛利率,
	ROUND( SUM( T1.MAOLI_NO2_Q3 )/ SUM( T1.NETAMT_NO2_Q3 )* 100, 2 ) AS 季度毛利率,
	ROUND( SUM( T1.SMAOLI_NO2 )/ SUM( T1.SNETAMT_NO2 )* 100, 2 ) AS 累计毛利率,
	ROUND((
			SUM( T1.MAOLI_NO2 )/ SUM(
			T1.NETAMT_NO2) - SUM( T4.LY_MAOLI_NO2 )/ SUM(T4.LY_NETAMT_NO2 ))* 100,
		2 
	) AS 毛利率同比差,
	ROUND((
			SUM( T1.MAOLI_NO2_Q3 )/ SUM(
			T1.NETAMT_NO2_Q3) - SUM(Q3.MAOLI_NO2_LQ3)/ SUM(Q3.NETAMT_NO2_LQ3 ))* 100,
		2 
	) AS 季度毛利率同比差,
	ROUND((
			SUM( T1.SMAOLI_NO2 )/ SUM(
			T1.SNETAMT_NO2) - SUM( T3.LY_SMAOLI_NO2  )/ SUM(T3.LY_SNETAMT_NO2  ))* 100,
		2 
	) AS 累计毛利率同比差 	 	
FROM
	(
	SELECT
	 --  T1.COMP_CLASSIFY1,
		T1.STARTEY_CLASSIFY,
		COUNT(DISTINCT T1.BUSNO) AS SCOMP_BUSNO,
		SUM(IF(T1.NETAMT_NO2 IS NULL,0,1) ) AS COMP_BUSNO,
		SUM(IF(T1.NETAMT_NO2_Q3 IS NULL,0,1) ) AS QCOMP_BUSNO,
		ROUND(SUM(T1.SNETAMT_NO2)/10000,2) AS SNETAMT_NO2,
		ROUND(SUM(T1.SPURAMT_NO2)/10000,2) AS SPURAMT_NO2,
		ROUND(SUM(T1.SMAOLI_NO2)/10000,2) AS SMAOLI_NO2,
		ROUND(SUM(T1.NETAMT_NO2)/10000,2) AS NETAMT_NO2,
		ROUND(SUM(T1.PURAMT_NO2)/10000,2) AS PURAMT_NO2,
		ROUND(SUM(T1.MAOLI_NO2)/10000,2) AS MAOLI_NO2,
		ROUND(SUM(T1.LM_NETAMT_NO2)/10000,2) AS LM_NETAMT_NO2,
		ROUND(SUM(T1.LM_PURAMT_NO2)/10000,2) AS LM_PURAMT_NO2,
		ROUND(SUM(T1.LM_MAOLI_NO2)/10000,2) AS LM_MAOLI_NO2,
		ROUND(SUM(T1.NETAMT_NO2_Q2)/10000,2) AS NETAMT_NO2_Q2,
		ROUND(SUM(T1.PURAMT_NO2_Q2)/10000,2) AS PURAMT_NO2_Q2,
		ROUND(SUM(T1.MAOLI_NO2_Q2)/10000,2) AS MAOLI_NO2_Q2,
		ROUND(SUM(T1.NETAMT_NO2_Q3)/10000,2) AS NETAMT_NO2_Q3,
		ROUND(SUM(T1.PURAMT_NO2_Q3)/10000,2) AS PURAMT_NO2_Q3,
		ROUND(SUM(T1.MAOLI_NO2_Q3)/10000,2) AS MAOLI_NO2_Q3
	FROM
	(SELECT
		T2.COMP_CLASSIFY1,
		T2.STARTEY_CLASSIFY,
		T1.COMPID,
		T1.BUSNO,
-- 		T1.SXSCS,
-- 		T1.SKLL,
		T1.SNETAMT_NO2,
		T1.SPURAMT_NO2,
		T1.SMAOLI_NO2,
-- 		T1.LY_SXSCS,
-- 		T1.LY_SKLL,
-- 		T1.LY_SNETAMT_NO2,
-- 		T1.LY_SPURAMT_NO2,
-- 		T1.LY_SMAOLI_NO2,
-- 		T1.LM_SXSCS,
-- 		T1.LM_SKLL,
-- 		T1.LM_SNETAMT_NO2,
-- 		T1.LM_SPURAMT_NO2,
-- 		T1.LM_SMAOLI_NO2,
		T1.XSCS,
		T1.KLL,
		T1.NETAMT_NO2,
		T1.PURAMT_NO2,
		T1.MAOLI_NO2,
-- 		T1.LY_XSCS,
-- 		T1.LY_KLL,
--  		T1.LY_NETAMT_NO2,
-- 		T1.LY_PURAMT_NO2,
-- 		T1.LY_MAOLI_NO2,
		T1.LM_XSCS,
		T1.LM_KLL,
		T1.LM_NETAMT_NO2,
		T1.LM_PURAMT_NO2,
		T1.LM_MAOLI_NO2,
	  T1.XSCS_Q1,
		T1.KLL_Q1,
		T1.NETAMT_NO2_Q1,
		T1.PURAMT_NO2_Q1,
		T1.MAOLI_NO2_Q1,
	  T1.XSCS_Q2,
		T1.KLL_Q2,
		T1.NETAMT_NO2_Q2,
		T1.PURAMT_NO2_Q2,
		T1.MAOLI_NO2_Q2,
	  T1.XSCS_Q3,
		T1.KLL_Q3,
		T1.NETAMT_NO2_Q3,
		T1.PURAMT_NO2_Q3,
		T1.MAOLI_NO2_Q3	
	FROM
		DM_BUS_SALE_REPORT T1
		LEFT JOIN DIM_DXH_COMPANY T2 ON T1.COMPID = T2.COMPID 
	WHERE
		T2.STARTEY_CLASSIFY <> '无' 
		-- AND T2.COMP_CLASSIFY1 = '湖南'
	) T1 
GROUP BY
T1.STARTEY_CLASSIFY
-- T1.COMP_CLASSIFY1
)T1
LEFT JOIN -- 销售任务预算 
(SELECT STARTEY_CLASSIFY_TEMP, SUM( SALES_BUDGET ) AS CUR_SALES_BUDGET FROM dw_comp_sale_goal GROUP BY STARTEY_CLASSIFY_TEMP -- HAVING COMP_CLASSIFY1_TEMP IS NOT NULL 
) t2 ON t1.STARTEY_CLASSIFY = t2.STARTEY_CLASSIFY_TEMP
LEFT JOIN -- 去年同年累计无税销售金额
(SELECT t1.STARTEY_CLASSIFY AS STARTEY_CLASSIFY_TEMP, COUNT(DISTINCT t1.`机构编码`) AS LY_SCOMP_BUSNO, SUM(t1.`无税销售`) AS LY_SNETAMT_NO2, SUM(t1.`无税毛利额`) AS LY_SMAOLI_NO2 FROM (SELECT STARTEY_CLASSIFY,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份<10)t1 GROUP BY t1.STARTEY_CLASSIFY)T3 ON t1.STARTEY_CLASSIFY = t3.STARTEY_CLASSIFY_TEMP
LEFT JOIN -- 去年同年同月无税销售金额
(SELECT t1.STARTEY_CLASSIFY AS STARTEY_CLASSIFY_TEMP, COUNT(DISTINCT t1.`机构编码`) AS LY_COMP_BUSNO, SUM(t1.`无税销售`) AS LY_NETAMT_NO2, SUM(t1.`无税毛利额`) AS LY_MAOLI_NO2 FROM (SELECT STARTEY_CLASSIFY,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份=9)t1 GROUP BY t1.STARTEY_CLASSIFY)T4 ON t1.STARTEY_CLASSIFY = t4.STARTEY_CLASSIFY_TEMP
LEFT JOIN -- 去年同年一季度无税销售金额
(SELECT t1.STARTEY_CLASSIFY AS STARTEY_CLASSIFY_TEMP, COUNT(DISTINCT  t1.`机构编码`) AS COMP_BUSNO_LQ1, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ1, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ1 FROM (SELECT STARTEY_CLASSIFY,`机构编码`,月份,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 1 AND 3 )t1 GROUP BY t1.STARTEY_CLASSIFY)Q1 ON t1.STARTEY_CLASSIFY = Q1.STARTEY_CLASSIFY_TEMP
 LEFT JOIN -- 去年同年二季度无税销售金额
(SELECT t1.STARTEY_CLASSIFY AS STARTEY_CLASSIFY_TEMP, COUNT(DISTINCT t1.`机构编码`) AS COMP_BUSNO_LQ2, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ2, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ2 FROM (SELECT STARTEY_CLASSIFY,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 4 AND 6)t1 GROUP BY t1.STARTEY_CLASSIFY)Q2 ON t1.STARTEY_CLASSIFY = Q2.STARTEY_CLASSIFY_TEMP
 LEFT JOIN -- 去年同年三季度无税销售金额
 (SELECT t1.STARTEY_CLASSIFY AS STARTEY_CLASSIFY_TEMP, COUNT(DISTINCT t1.`机构编码`) AS COMP_BUSNO_LQ3, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ3, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ3 FROM (SELECT STARTEY_CLASSIFY,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 7 AND 9)t1 GROUP BY t1.STARTEY_CLASSIFY)Q3 ON t1.STARTEY_CLASSIFY = Q3.STARTEY_CLASSIFY_TEMP
-- GROUP BY
-- T1.STARTEY_CLASSIFY;
-- T1.COMP_CLASSIFY1;
)


-- 战略管控层级数据展示：马莉分类
(DROP TABLE IF EXISTS DM_MALI_SALE_REPORT;
CREATE TABLE DM_MALI_SALE_REPORT AS 
SELECT
	T1.STARTEY_CLASSIFY AS 管控类型,
	T1.COMP_CLASSIFY2 AS 省区划分,
	SUM(T1.COMP_BUSNO) AS 在营机构数,
  SUM(T1.QCOMP_BUSNO) AS 当季在营机构数,
	SUM(T1.SCOMP_BUSNO) AS 累计在营机构数,
	SUM(T1.TO_KLL) AS TO_KLL,
	ROUND(SUM(CUR_SALES_BUDGET),2) AS 年度销售预算,
	ROUND(SUM(CUR_SALES_BUDGET)/4,2) AS 当季销售预算,
	ROUND(SUM(CUR_SALES_BUDGET)/12,2) AS 当月销售预算,
	ROUND( SUM( T1.NETAMT_NO2 ), 2 ) AS 当月销售金额,
	ROUND( SUM( T1.NETAMT_NO2_Q3 ), 2 ) AS 当季销售金额,
	ROUND( SUM( T1.SNETAMT_NO2 ), 2 ) AS 累计销售金额,
	ROUND( SUM( T4.LY_NETAMT_NO2 ), 2 ) AS 同期销售金额,
  ROUND( SUM( Q3.NETAMT_NO2_LQ3), 2 ) AS 同期季度销售金额,
	ROUND( SUM( T3.LY_SNETAMT_NO2 ), 2 ) AS 同期累计销售金额,
	ROUND( SUM( T1.MAOLI_NO2 ), 2 ) AS 当月毛利金额,
	ROUND( SUM( T1.MAOLI_NO2_Q3 ), 2 ) AS 当季毛利金额,
	ROUND( SUM( T1.SMAOLI_NO2 ), 2 ) AS 累计毛利金额,
	ROUND( SUM( T4.LY_MAOLI_NO2 ), 2 ) AS 同期毛利金额,
  ROUND( SUM( Q3.MAOLI_NO2_LQ3), 2 ) AS 同期季度毛利金额,
	ROUND( SUM( T3.LY_SMAOLI_NO2 ), 2 ) AS 同期累计毛利金额,
	ROUND( SUM( T1.LM_NETAMT_NO2 ), 2 ) AS 上月销售金额,
	ROUND( SUM( T1.LM_MAOLI_NO2 ), 2 ) AS 上月毛利金额,
	ROUND( SUM( Q2.NETAMT_NO2_LQ2), 2 ) AS 上季度销售金额,  
	ROUND( SUM( Q2.MAOLI_NO2_LQ2), 2 ) AS 上季度毛利金额,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T4.LY_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额同比,
	ROUND( SUM( T1.NETAMT_NO2 )*12/ SUM(T2.CUR_SALES_BUDGET)* 100, 2 ) AS 销售金额达成,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T1.LM_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额环比,
	ROUND( SUM(T1.NETAMT_NO2_Q3)/ SUM( Q3.NETAMT_NO2_LQ3)* 100-100, 2 ) AS 季度销售金额同比,
	ROUND( SUM(T1.NETAMT_NO2_Q3 )*4/ SUM(T2.CUR_SALES_BUDGET)* 100, 2 ) AS 季度销售金额达成,
	ROUND( SUM(T1.NETAMT_NO2_Q3)/ SUM( Q2.NETAMT_NO2_LQ2)* 100-100, 2 ) AS 季度销售金额环比,
	ROUND( SUM(T1.SNETAMT_NO2)/ SUM(T3.LY_SNETAMT_NO2)* 100-100, 2 ) AS 累计销售同比,
	ROUND( SUM( T1.SNETAMT_NO2 )/ t2.CUR_SALES_BUDGET* 100, 2 ) AS 累计销售达成,
	ROUND( SUM(T1.MAOLI_NO2 ) / SUM(T4.LY_MAOLI_NO2)* 100-100, 2 ) AS 毛利金额同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.LM_MAOLI_NO2 )* 100-100, 2 ) AS 毛利金额环比,
	ROUND( SUM(T1.SMAOLI_NO2 )/ SUM( T3.LY_SMAOLI_NO2 )* 100-100, 2 ) AS 累计毛利同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.NETAMT_NO2 )* 100, 2 ) AS 毛利率,
	ROUND( SUM( T1.MAOLI_NO2_Q3 )/ SUM( T1.NETAMT_NO2_Q3 )* 100, 2 ) AS 季度毛利率,
	ROUND( SUM( T1.SMAOLI_NO2 )/ SUM( T1.SNETAMT_NO2 )* 100, 2 ) AS 累计毛利率,
	ROUND((
			SUM( T1.MAOLI_NO2 )/ SUM(
			T1.NETAMT_NO2) - SUM( T4.LY_MAOLI_NO2 )/ SUM(T4.LY_NETAMT_NO2 ))* 100,
		2 
	) AS 毛利率同比差,
	ROUND((
			SUM( T1.MAOLI_NO2_Q3 )/ SUM(
			T1.NETAMT_NO2_Q3) - SUM(Q3.MAOLI_NO2_LQ3)/ SUM(Q3.NETAMT_NO2_LQ3 ))* 100,
		2 
	) AS 季度毛利率同比差,
	ROUND((
			SUM( T1.SMAOLI_NO2 )/ SUM(
			T1.SNETAMT_NO2) - SUM( T3.LY_SMAOLI_NO2  )/ SUM(T3.LY_SNETAMT_NO2  ))* 100,
		2 
	) AS 累计毛利率同比差 	
FROM
	(
	SELECT
	  T1.COMP_CLASSIFY2,
		T1.COMP_CLASSIFY1,
		T1.STARTEY_CLASSIFY,
		COUNT(DISTINCT T1.BUSNO) AS SCOMP_BUSNO,
		SUM(IF(T1.NETAMT_NO2 IS NULL,0,1) ) AS COMP_BUSNO,
		SUM(IF(T1.NETAMT_NO2_Q3 IS NULL,0,1) ) AS QCOMP_BUSNO,
		ROUND(SUM(T1.KLL),2) AS TO_KLL,
		ROUND(SUM(T1.SNETAMT_NO2)/10000,2) AS SNETAMT_NO2,
		ROUND(SUM(T1.SPURAMT_NO2)/10000,2) AS SPURAMT_NO2,
		ROUND(SUM(T1.SMAOLI_NO2)/10000,2) AS SMAOLI_NO2,
		ROUND(SUM(T1.NETAMT_NO2)/10000,2) AS NETAMT_NO2,
		ROUND(SUM(T1.PURAMT_NO2)/10000,2) AS PURAMT_NO2,
		ROUND(SUM(T1.MAOLI_NO2)/10000,2) AS MAOLI_NO2,
		ROUND(SUM(T1.LM_NETAMT_NO2)/10000,2) AS LM_NETAMT_NO2,
		ROUND(SUM(T1.LM_PURAMT_NO2)/10000,2) AS LM_PURAMT_NO2,
		ROUND(SUM(T1.LM_MAOLI_NO2)/10000,2) AS LM_MAOLI_NO2,
		ROUND(SUM(T1.NETAMT_NO2_Q2)/10000,2) AS NETAMT_NO2_Q2,
		ROUND(SUM(T1.PURAMT_NO2_Q2)/10000,2) AS PURAMT_NO2_Q2,
		ROUND(SUM(T1.MAOLI_NO2_Q2)/10000,2) AS MAOLI_NO2_Q2,
		ROUND(SUM(T1.NETAMT_NO2_Q3)/10000,2) AS NETAMT_NO2_Q3,
		ROUND(SUM(T1.PURAMT_NO2_Q3)/10000,2) AS PURAMT_NO2_Q3,
		ROUND(SUM(T1.MAOLI_NO2_Q3)/10000,2) AS MAOLI_NO2_Q3
	FROM
	(SELECT
		T2.COMP_CLASSIFY1,
		T2.COMP_CLASSIFY2,
		T2.STARTEY_CLASSIFY,
		T1.COMPID,
		T1.BUSNO,
-- 		T1.SXSCS,
-- 		T1.SKLL,
		T1.SNETAMT_NO2,
		T1.SPURAMT_NO2,
		T1.SMAOLI_NO2,
-- 		T1.LY_SXSCS,
-- 		T1.LY_SKLL,
-- 		T1.LY_SNETAMT_NO2,
-- 		T1.LY_SPURAMT_NO2,
-- 		T1.LY_SMAOLI_NO2,
-- 		T1.LM_SXSCS,
-- 		T1.LM_SKLL,
-- 		T1.LM_SNETAMT_NO2,
-- 		T1.LM_SPURAMT_NO2,
-- 		T1.LM_SMAOLI_NO2,
		T1.XSCS,
		T1.KLL,
		T1.NETAMT_NO2,
		T1.PURAMT_NO2,
		T1.MAOLI_NO2,
-- 		T1.LY_XSCS,
-- 		T1.LY_KLL,
--  		T1.LY_NETAMT_NO2,
-- 		T1.LY_PURAMT_NO2,
-- 		T1.LY_MAOLI_NO2,
		T1.LM_XSCS,
		T1.LM_KLL,
		T1.LM_NETAMT_NO2,
		T1.LM_PURAMT_NO2,
		T1.LM_MAOLI_NO2,
	  T1.XSCS_Q1,
		T1.KLL_Q1,
		T1.NETAMT_NO2_Q1,
		T1.PURAMT_NO2_Q1,
		T1.MAOLI_NO2_Q1,
	  T1.XSCS_Q2,
		T1.KLL_Q2,
		T1.NETAMT_NO2_Q2,
		T1.PURAMT_NO2_Q2,
		T1.MAOLI_NO2_Q2,
	  T1.XSCS_Q3,
		T1.KLL_Q3,
		T1.NETAMT_NO2_Q3,
		T1.PURAMT_NO2_Q3,
		T1.MAOLI_NO2_Q3	
	FROM
		DM_BUS_SALE_REPORT T1
		LEFT JOIN DIM_DXH_COMPANY T2 ON T1.COMPID = T2.COMPID
		LEFT JOIN DIM_DXH_BUSI T3 ON T1.BUSNO = T3.BUSNO 
	WHERE
		-- T2.STARTEY_CLASSIFY IN '直管' 
	T2.COMP_CLASSIFY1 IN ('北京','山东','武汉三九','华东区域')
 -- AND T3.org_dtp_type ='社区药房'
	) T1 
GROUP BY
T1.COMP_CLASSIFY2,
T1.COMP_CLASSIFY1,
T1.STARTEY_CLASSIFY
)T1
LEFT JOIN -- 销售任务预算 
(SELECT COMP_CLASSIFY1_TEMP, SUM( SALES_BUDGET ) AS CUR_SALES_BUDGET FROM dw_comp_sale_goal GROUP BY COMP_CLASSIFY1_TEMP HAVING COMP_CLASSIFY1_TEMP IS NOT NULL ) t2 ON t1.COMP_CLASSIFY1 = t2.COMP_CLASSIFY1_TEMP
LEFT JOIN -- 去年同年累计无税销售金额
	( SELECT
		t1.COMP_CLASSIFY2 AS COMP_CLASSIFY2_TEMP,
		COUNT( DISTINCT t1.`机构编码` ) AS LY_SCOMP_BUSNO,
		SUM( t1.`无税销售` ) AS LY_SNETAMT_NO2,
		SUM( t1.`无税毛利额` ) AS LY_SMAOLI_NO2 
		FROM
			(
			SELECT
				COMP_CLASSIFY2,
				`机构编码`,
			IF
				( `无税销售` IS NULL, 0, `无税销售` * 1 ) AS `无税销售`,
			IF
				( `无税毛利额` IS NULL, 0, `无税毛利额` * 1 ) AS `无税毛利额` 
			FROM
				DW_busi_salebym2019 T1
				LEFT JOIN DIM_DXH_BUSI T2 ON T1.`机构编码` = T2.BUSNO 
			WHERE
				T1.月份 < 10 
--  				AND T2.org_dtp_type = '社区药房' 
			) t1 
		GROUP BY
			t1.COMP_CLASSIFY2 
		) T3 ON t1.COMP_CLASSIFY2 = t3.COMP_CLASSIFY2_TEMP
LEFT JOIN -- 去年同年同月无税销售金额
(SELECT t1.COMP_CLASSIFY2 AS COMP_CLASSIFY2_TEMP, COUNT(DISTINCT t1.`机构编码`) AS LY_COMP_BUSNO, SUM(t1.`无税销售`) AS LY_NETAMT_NO2, SUM(t1.`无税毛利额`) AS LY_MAOLI_NO2 FROM (SELECT T1.COMP_CLASSIFY2,T1.`机构编码`,IF(T1.`无税销售` IS NULL,0,T1.`无税销售`*1) AS `无税销售` ,IF(T1.`无税毛利额` IS NULL,0,T1.`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 T1 LEFT JOIN DIM_DXH_BUSI T2 ON T1.`机构编码` = T2.BUSNO WHERE T1.月份=9
-- AND T2.org_dtp_type = '社区药房'
)t1 GROUP BY t1.COMP_CLASSIFY2)T4 ON t1.COMP_CLASSIFY2 = t4.COMP_CLASSIFY2_TEMP
LEFT JOIN -- 去年同年一季度无税销售金额
(SELECT t1.COMP_CLASSIFY2 AS COMP_CLASSIFY2_TEMP, COUNT(DISTINCT  t1.`机构编码`) AS COMP_BUSNO_LQ1, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ1, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ1 FROM (SELECT COMP_CLASSIFY2,`机构编码`,月份,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 1 AND 3 )t1 GROUP BY t1.COMP_CLASSIFY2)Q1 ON t1.COMP_CLASSIFY2 = Q1.COMP_CLASSIFY2_TEMP
 LEFT JOIN -- 去年同年二季度无税销售金额
(SELECT t1.COMP_CLASSIFY2 AS COMP_CLASSIFY2_TEMP, COUNT(DISTINCT t1.`机构编码`) AS COMP_BUSNO_LQ2, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ2, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ2 FROM (SELECT COMP_CLASSIFY2,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 4 AND 6)t1 GROUP BY t1.COMP_CLASSIFY2)Q2 ON t1.COMP_CLASSIFY2 = Q2.COMP_CLASSIFY2_TEMP
 LEFT JOIN -- 去年同年三季度无税销售金额
 (SELECT t1.COMP_CLASSIFY2 AS COMP_CLASSIFY2_TEMP, COUNT(DISTINCT t1.`机构编码`) AS COMP_BUSNO_LQ3, SUM(t1.`无税销售`) AS NETAMT_NO2_LQ3, SUM(t1.`无税毛利额`) AS MAOLI_NO2_LQ3 FROM (SELECT COMP_CLASSIFY2,`机构编码`,IF(`无税销售` IS NULL,0,`无税销售`*1) AS `无税销售` ,IF(`无税毛利额` IS NULL,0,`无税毛利额`*1) AS `无税毛利额` FROM DW_busi_salebym2019 WHERE 月份 BETWEEN 7 AND 9)t1 GROUP BY t1.COMP_CLASSIFY2)Q3 ON t1.COMP_CLASSIFY2 = Q3.COMP_CLASSIFY2_TEMP
GROUP BY
T1.STARTEY_CLASSIFY,
T1.COMP_CLASSIFY2;)



-- 战略管控-直管门店级指标数据 日期序列情况
(DROP TABLE IF EXISTS DM_BUSNO_SALE_DATE;
CREATE TABLE DM_BUSNO_SALE_DATE AS 
SELECT 
  T1.STARTEY_CLASSIFY,
	T1.COMP_CLASSIFY1,
	T1.COMPID,
		T1.BUSNO,
		T1.ACCMONTH,
		T2.ORGNAME,
	T2.org_dtp_type,
	SUM(IF(T1.NETAMT_NO2 IS NULL AND LEFT(ACCMONTH,7)<>'2020-09', 0, 1 )) AS 在营机构数,
	ROUND( T1.KLL/T1.DAYS,1 ) AS 日客流量,
	ROUND( SUM( T1.KLL )/ SUM( IF ( T1.NETAMT_NO2 IS NULL, 0, 1 )), 0 ) AS 单店月客流量,
	ROUND( SUM( T1.LY_KLL )/ SUM( IF ( T1.LY_NETAMT_NO2 IS NULL, 0, 1 )), 0 ) AS 同期单店月客流量,
	ROUND( SUM( T1.KLL )/ SUM( IF ( T1.NETAMT_NO2 IS NULL, 0, 1 )), 0 ) -ROUND( SUM( T1.LY_KLL )/ SUM( IF ( T1.LY_NETAMT_NO2 IS NULL, 0, 1 )), 0 )AS 单店月客流量同比差,
	ROUND( SUM( T1.KLL )/ SUM( IF ( T1.NETAMT_NO2 IS NULL, 0, 1 )), 0 )/ROUND( SUM( T1.LY_KLL )/ SUM( IF ( T1.LY_NETAMT_NO2 IS NULL, 0, 1 )), 0 )*100-100 AS 单店月客流量同比,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T1.KLL ), 2 )-ROUND( SUM( T1.LY_NETAMT_NO2 )/ SUM( T1.LY_KLL ), 2 ) AS 平均客单价同比差,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T1.KLL ), 2 ) AS 平均客单价,
	-- ROUND( SUM( T1.SNETAMT_NO2 )/ SUM( T1.SKLL ), 2 )-ROUND( SUM( T1.LY_SNETAMT_NO2 )/ SUM( T1.LY_SKLL ), 2 ) AS 累计客单价同比差,
	-- ROUND( SUM( T1.SNETAMT_NO2 )/ SUM( T1.SKLL ), 2 ) AS 累计平均客单价,
	ROUND( SUM( T1.NETAMT_NO2 )/ 10000, 2 ) AS 当月销售金额,
	ROUND( SUM( T1.NETAMT_NO2 )/ 10000/T1.DAYS, 2 ) AS 当月日销售金额,
	-- ROUND( SUM( T1.SNETAMT_NO2 )/ 10000, 2 ) AS 累计销售金额,
	ROUND( SUM( T1.LY_NETAMT_NO2 )/ 10000, 2 ) AS 同期销售金额,
	ROUND( SUM( T1.LM_NETAMT_NO2 )/ 10000, 2 ) AS 上月销售金额,
	-- ROUND( SUM( T1.LY_SNETAMT_NO2 )/ 10000, 2 ) AS 同期累计销售金额,
	ROUND( SUM( T1.MAOLI_NO2 )/ 10000, 2 ) AS 当月毛利金额,
	-- ROUND( SUM( T1.SMAOLI_NO2 )/ 10000, 2 ) AS 累计毛利金额,
	ROUND( SUM( T1.LY_MAOLI_NO2 )/ 10000, 2 ) AS 同期毛利金额,
	ROUND( SUM( T1.LM_MAOLI_NO2 )/ 10000, 2 ) AS 上月毛利金额,
	-- ROUND( SUM( T1.LY_MAOLI_NO2 )/ 10000, 2 ) AS 同期累计毛利金额,
	ROUND( SUM( IF(T1.LY_NETAMT_NO2 IS NULL,0,T1.NETAMT_NO2 ))/ SUM( T1.LY_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额同比,
	-- ROUND( SUM( T1.NETAMT_NO2/10000 )*12/ t2.CUR_SALES_BUDGET* 100, 2 ) AS 销售金额达成,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T1.LM_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额环比,
	-- ROUND( SUM( IF(T1.LY_SNETAMT_NO2 IS NULL,0,T1.SNETAMT_NO2 ) )/ SUM( T1.LY_SNETAMT_NO2 )* 100-100, 2 ) AS 累计销售同比,
	-- ROUND( SUM( T1.SNETAMT_NO2/10000 )/ t2.CUR_SALES_BUDGET* 100, 2 ) AS 累计销售达成,
	ROUND( SUM(  IF(T1.LY_MAOLI_NO2 IS NULL,0,T1.MAOLI_NO2 ) )/ SUM( T1.LY_MAOLI_NO2 )* 100-100, 2 ) AS 毛利金额同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.LM_MAOLI_NO2 )* 100-100, 2 ) AS 毛利金额环比,
	-- ROUND( SUM( IF(T1.LY_SMAOLI_NO2 IS NULL,0,T1.SMAOLI_NO2 ))/ SUM( T1.LY_SMAOLI_NO2 )* 100-100, 2 ) AS 累计毛利同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.NETAMT_NO2 )* 100, 2 ) AS 毛利率,
	ROUND((
			SUM( T1.MAOLI_NO2 )/ SUM(
			T1.NETAMT_NO2) - SUM( T1.LY_MAOLI_NO2 )/ SUM( T1.LY_NETAMT_NO2 ))* 100,
		2 
	) AS 毛利率同比差
FROM 
( SELECT
	T2.STARTEY_CLASSIFY,
	T2.COMP_CLASSIFY1,
	T1.COMPID,
	T1.BUSNO,
	T1.ACCMONTH,
	T1.DAYS,
	T1.XSCS,
	T1.KLL,
	T1.NETAMT_NO2,
	T1.PURAMT_NO2,
	ROUND( T1.NETAMT_NO2 - T1.PURAMT_NO2, 2 ) AS MAOLI_NO2,
	T1.LY_XSCS,
	T1.LY_KLL,
	T1.LY_NETAMT_NO2,
	T1.LY_PURAMT_NO2,
	ROUND( T1.LY_NETAMT_NO2 - T1.LY_PURAMT_NO2, 2 ) AS LY_MAOLI_NO2,
	T1.LM_XSCS,
	T1.LM_KLL,
	T1.LM_NETAMT_NO2,
	T1.LM_PURAMT_NO2,
	ROUND( T1.LM_NETAMT_NO2 - T1.LM_PURAMT_NO2, 2 ) AS LM_MAOLI_NO2 
	FROM
		ods_t_rpt_sale_m T1
		LEFT JOIN DIM_DXH_COMPANY T2 ON T1.COMPID = T2.COMPID
		-- LEFT JOIN DIM_DXH_BUSI T3 ON T1.BUSNO = T3.BUSNO 
	WHERE
		T2.STARTEY_CLASSIFY = '直管' 
		AND T2.COMPID= 2101
		AND T1.ACCYEAR > 2018 
		AND T1.ACCMONTH < '2020-10-01' 
	) T1
		left join dim_dxh_busi T2 ON T1.BUSNO = T2.BUSNO
		GROUP BY
		T1.STARTEY_CLASSIFY,
	  T1.COMP_CLASSIFY1,
	  T1.COMPID,
		T1.BUSNO,
		T1.ACCMONTH);
		
		
-- 战略管控-直管马莉分类指标数据 日期序列情况
(DROP TABLE IF EXISTS DM_MALI_SALE_DATE;
CREATE TABLE DM_MALI_SALE_DATE AS 
SELECT 
  T1.STARTEY_CLASSIFY,
	T1.COMP_CLASSIFY2,
	T1.ACCMONTH,
	T1.ACCYEAR,
	T1.YEARMONTH,
	SUM(IF(T1.NETAMT_NO2 IS NULL AND LEFT(ACCMONTH,7)<>'2020-08', 0, 1 )) AS 在营机构数,
	ROUND( SUM(T1.KLL)/SUM(T1.DAYS),1 ) AS 日客流量,
	ROUND( SUM( T1.KLL )/ SUM( IF ( T1.NETAMT_NO2 IS NULL, 0, 1 )), 0 ) AS 单店月客流量,
	ROUND( SUM( T1.LY_KLL )/ SUM( IF ( T1.LY_NETAMT_NO2 IS NULL, 0, 1 )), 0 ) AS 同期单店月客流量,
	ROUND( SUM( T1.KLL )/ SUM( IF ( T1.NETAMT_NO2 IS NULL, 0, 1 )), 0 ) -ROUND( SUM( T1.LY_KLL )/ SUM( IF ( T1.LY_NETAMT_NO2 IS NULL, 0, 1 )), 0 )AS 单店月客流量同比差,
	ROUND( SUM( T1.KLL )/ SUM( IF ( T1.NETAMT_NO2 IS NULL, 0, 1 )), 0 )/ROUND( SUM( T1.LY_KLL )/ SUM( IF ( T1.LY_NETAMT_NO2 IS NULL, 0, 1 )), 0 )*100-100 AS 单店月客流量同比,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T1.KLL ), 2 )-ROUND( SUM( T1.LY_NETAMT_NO2 )/ SUM( T1.LY_KLL ), 2 ) AS 平均客单价同比差,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T1.KLL ), 2 ) AS 平均客单价,
	-- ROUND( SUM( T1.SNETAMT_NO2 )/ SUM( T1.SKLL ), 2 )-ROUND( SUM( T1.LY_SNETAMT_NO2 )/ SUM( T1.LY_SKLL ), 2 ) AS 累计客单价同比差,
	-- ROUND( SUM( T1.SNETAMT_NO2 )/ SUM( T1.SKLL ), 2 ) AS 累计平均客单价,
	ROUND( SUM( T1.NETAMT_NO2 )/ 10000, 2 ) AS 当月销售金额,
	ROUND( SUM( T1.NETAMT_NO2 )/ 10000/T1.DAYS, 2 ) AS 当月日销售金额,
	-- ROUND( SUM( T1.SNETAMT_NO2 )/ 10000, 2 ) AS 累计销售金额,
	ROUND( SUM( T1.LY_NETAMT_NO2 )/ 10000, 2 ) AS 同期销售金额,
	ROUND( SUM( T1.LM_NETAMT_NO2 )/ 10000, 2 ) AS 上月销售金额,
	-- ROUND( SUM( T1.LY_SNETAMT_NO2 )/ 10000, 2 ) AS 同期累计销售金额,
	ROUND( SUM( T1.MAOLI_NO2 )/ 10000, 2 ) AS 当月毛利金额,
	-- ROUND( SUM( T1.SMAOLI_NO2 )/ 10000, 2 ) AS 累计毛利金额,
	ROUND( SUM( T1.LY_MAOLI_NO2 )/ 10000, 2 ) AS 同期毛利金额,
	ROUND( SUM( T1.LM_MAOLI_NO2 )/ 10000, 2 ) AS 上月毛利金额,
	-- ROUND( SUM( T1.LY_MAOLI_NO2 )/ 10000, 2 ) AS 同期累计毛利金额,
	ROUND( SUM( IF(T1.LY_NETAMT_NO2 IS NULL,0,T1.NETAMT_NO2 ))/ SUM( T1.LY_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额同比,
	-- ROUND( SUM( T1.NETAMT_NO2/10000 )*12/ t2.CUR_SALES_BUDGET* 100, 2 ) AS 销售金额达成,
	ROUND( SUM( T1.NETAMT_NO2 )/ SUM( T1.LM_NETAMT_NO2 )* 100-100, 2 ) AS 销售金额环比,
	-- ROUND( SUM( IF(T1.LY_SNETAMT_NO2 IS NULL,0,T1.SNETAMT_NO2 ) )/ SUM( T1.LY_SNETAMT_NO2 )* 100-100, 2 ) AS 累计销售同比,
	-- ROUND( SUM( T1.SNETAMT_NO2/10000 )/ t2.CUR_SALES_BUDGET* 100, 2 ) AS 累计销售达成,
	ROUND( SUM(  IF(T1.LY_MAOLI_NO2 IS NULL,0,T1.MAOLI_NO2 ) )/ SUM( T1.LY_MAOLI_NO2 )* 100-100, 2 ) AS 毛利金额同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.LM_MAOLI_NO2 )* 100-100, 2 ) AS 毛利金额环比,
	-- ROUND( SUM( IF(T1.LY_SMAOLI_NO2 IS NULL,0,T1.SMAOLI_NO2 ))/ SUM( T1.LY_SMAOLI_NO2 )* 100-100, 2 ) AS 累计毛利同比,
	ROUND( SUM( T1.MAOLI_NO2 )/ SUM( T1.NETAMT_NO2 )* 100, 2 ) AS 毛利率,
	ROUND((
			SUM( T1.MAOLI_NO2 )/ SUM(
			T1.NETAMT_NO2) - SUM( T1.LY_MAOLI_NO2 )/ SUM( T1.LY_NETAMT_NO2 ))* 100,
		2 
	) AS 毛利率同比差
FROM 
	(SELECT
	  T2.STARTEY_CLASSIFY,
	  T2.COMP_CLASSIFY1,
		T2.COMP_CLASSIFY2,
		T2.COMPNAME,
		T1.COMPID,
		T1.BUSNO,
		T1.ACCMONTH,
		T1.ACCYEAR,
		T1.YEARMONTH,
		T1.DAYS,
		T1.XSCS,
		T1.KLL,
		T1.NETAMT_NO2,
		T1.PURAMT_NO2,
		ROUND( T1.NETAMT_NO2 - T1.PURAMT_NO2, 2 ) AS MAOLI_NO2,
		T1.LY_XSCS,
		T1.LY_KLL,
		T1.LY_NETAMT_NO2,
		T1.LY_PURAMT_NO2,
		ROUND( T1.LY_NETAMT_NO2 - T1.LY_PURAMT_NO2, 2 ) AS LY_MAOLI_NO2,
		T1.LM_XSCS,
		T1.LM_KLL,
		T1.LM_NETAMT_NO2,
		T1.LM_PURAMT_NO2,
		ROUND( T1.LM_NETAMT_NO2 - T1.LM_PURAMT_NO2, 2 ) AS LM_MAOLI_NO2 
	FROM
		ods_t_rpt_sale_m T1
	LEFT JOIN DIM_DXH_COMPANY T2 ON T1.COMPID = T2.COMPID
  -- LEFT JOIN DIM_DXH_BUSI T3 ON T1.BUSNO = T3.COMPID	
	WHERE
		T2.STARTEY_CLASSIFY = '直管'
		-- AND T3.ORG_DTP_TYPE = '社区药房'
		AND T1.ACCYEAR > 2018 
		AND T1.ACCMONTH < '2020-10-01' 
)T1
 INNER JOIN  (SELECT BUSNO FROM dim_dxh_busi WHERE ORG_DTP_TYPE = '专业药房' AND ORG_SALE_STATUS = '在营') T2 ON T1.BUSNO = T2.BUSNO
		GROUP BY
		T1.STARTEY_CLASSIFY,
	  T1.COMP_CLASSIFY2,
	-- T1.COMPID,
		-- T1.BUSNO,
		T1.ACCMONTH;)
		
		
		
		
-- 战略管控-直管马莉分类-专业药房清理，计算中
(DROP TABLE IF EXISTS DM_MALI_PSALE_DATE;
CREATE TABLE DM_MALI_PSALE_DATE AS 
	SELECT
	  t2.compid,
    t2.COMP_CLASSIFY2,
		T1.ACCMO,
		COUNT( DISTINCT SMDM_PRODUCT_NUM2 ) AS PRODUCT_COUNT,
		SUM( T1.SALEQTY1 ) AS SUM_SALEQTY1,
		COUNT( DISTINCT SMDM_PRODUCT_NUM2 ) AS PRODUCT_QTY,
		ROUND( SUM( T1.NETAMT_NO1), 1 ) AS PRODUCT_PRICE 
	FROM
		(
		SELECT
		 -- T3.COMP_CLASSIFY2,
			T1.COMPID,
			T1.BUSNO,
			T1.ACCMO,
			T1.WAREID,
			T1.MDM_PRODUCT_NUM2,
			T1.WARECODE,
		IF
			( T1.MDM_PRODUCT_NUM2 IS NULL, T1.WARECODE, T1.MDM_PRODUCT_NUM2 ) AS SMDM_PRODUCT_NUM2,
			T1.SALEQTY1,
			T1.NETAMT_NO1,
			T1.PURAMT_NO1,
			ROUND( T1.NETAMT_NO1 - T1.PURAMT_NO1, 2 ) AS MAOLI 
		FROM
			dw_sale_pro T1
			INNER JOIN ( SELECT busno FROM dim_dxh_busi WHERE ORG_SALE_STATUS = '在营' AND ORG_DTP_TYPE = '专业药房' AND STARTEY_CLASSIFY = '直管' ) T2 ON T1.BUSNO = T2.BUSNO
			where
			t1.accmo REGEXP '2019|2020' 
		) T1
		INNER JOIN (SELECT distinct compid,wareid FROM dim_dxh_ware WHERE DTP_TEMP_FLAG = 1 ) t3 on T1.COMPID = T3.COMPID  and T1.wareid = T3.wareid
	left JOIN ( SELECT COMPID, COMP_CLASSIFY2 FROM dim_dxh_COMPANY WHERE STARTEY_CLASSIFY = '直管' ) T2 ON T1.COMPID = T2.COMPID 
	GROUP BY
	  t2.compid,
		t2.COMP_CLASSIFY2,
	T1.ACCMO;)
		
		
-- 获得全部品种数据分月商品销售数据
DROP TABLE IF EXISTS dw_sale_pro;
CREATE TABLE dw_sale_pro AS
SELECT 
  T1.*
FROM 
(SELECT T1.* FROM  ods_sale_pro_quart01 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart02 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart03 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart04 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart05 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart06 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart07 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart08 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart09 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart09_ T1
UNION ALL
SELECT T1.* FROM  ods_sale_pro_quart10 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart11 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart12 T1
)T1



-- 国谈品种还原测试-基础数据
(DROP TABLE IF EXISTS dw_sale_pro_gt;
CREATE TABLE dw_sale_pro_gt AS
SELECT 
  T1.COMPID,
	T1.WAREID,
	T1.MDM_PRODUCT_NUM2,
	T2.`批准文号注册证号`,
	T2.`通用名中文名`,
	T1.ACCMO,
  ROUND(SUM(T1.NETSUM1)/SUM(T1.SALEQTY1),1) AS PRO_PRICE,
	ROUND(SUM(T1.NETAMT_NO1)/SUM(T1.SALEQTY1),1) AS NETPRO_PRICE,
	ROUND(SUM(T1.PURAMT_NO1)/SUM(T1.SALEQTY1),1) AS PURPRO_PRICE
FROM 
(SELECT T1.* FROM  ods_sale_pro_quart01 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart02 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart03 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart04 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart05 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart06 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart07 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart08 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart09 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart10 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart11 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart12 T1
INNER JOIN (SELECT DISTINCT compid,wareid FROM dim_dxh_ware where gt_flag = 1) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID)T1
LEFT JOIN ods_ex_pro_mdm T2 ON T1.MDM_PRODUCT_NUM2 = T2.`物料主码`
GROUP BY
T1.COMPID,
T1.WAREID,
T1.MDM_PRODUCT_NUM2,
T1.ACCMO；)




-- 还原测算:马莉分类
(DROP TABLE IF EXISTS TEMP_DM_MALI_GT;
CREATE TABLE TEMP_DM_MALI_GT AS 
SELECT 
 T1.COMP_CLASSIFY2,
 T1.ACCMO,
 SUM(T1.NETAMT_NO1) AS 实际无税销售金额,
 SUM(T1.GT_NETAMT_NO1) AS 国谈无税销售金额,
 SUM(T1.HY_NETAMT_NO1) AS 还原无税销售金额,
 SUM(T1.NETAMT_NO1) AS 实际无税成本金额,
 SUM(T1.HY_PURAMT_NO1) AS 还原无税成本金额,
 SUM(T1.GT_PURAMT_NO1) AS 国谈无税成本金额,
 SUM(T1.GTHY_NETAMT_NO1) AS 还原国谈无税销售金额,
 SUM(T1.GTHY_PURAMT_NO1) AS 还原国谈无税成本金额
FROM 
(SELECT
  T3.COMP_CLASSIFY2,
	T1.COMPID,
	T1.BUSNO,
	T1.WAREID,
	T1.ACCMO,
	T1.SALEQTY1,
	T1.NETAMT_NO1,
	IF(T2.`09月价格` IS NULL,0,T1.NETAMT_NO1) AS GT_NETAMT_NO1,
	T1.PURAMT_NO1,
	IF(T2.`09月价格` IS NULL,0,T1.PURAMT_NO1) AS GT_PURAMT_NO1,
	ROUND(T1.NETAMT_NO1/T1.SALEQTY1,1) AS NETAMT_PRICE,
	T2.`09月价格`,
	T2.`09月还原价格`,
	IF(T2.`09月价格` IS NULL,T1.NETAMT_NO1,ROUND(T2.`09月还原价格`*T1.SALEQTY1,3)) AS HY_NETAMT_NO1,
	IF(T2.`09月价格` IS NULL,0,ROUND(T2.`09月还原价格`*T1.SALEQTY1,3)) AS GTHY_NETAMT_NO1,
	IF(T2.`09月价格` IS NULL,T1.PURAMT_NO1,ROUND(T2.`09月还原成本价格`*T1.SALEQTY1,3)) AS HY_PURAMT_NO1,
	IF(T2.`09月价格` IS NULL,0,ROUND(T2.`09月还原成本价格`*T1.SALEQTY1,3)) AS GTHY_PURAMT_NO1
FROM
	(SELECT T1.* FROM  ods_sale_pro_quart09 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart09_ T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart08 T1 ) T1
LEFT JOIN temp_gt_09 T2 ON  T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
LEFT JOIN dim_dxh_company T3 ON T1.COMPID = T3.COMPID
WHERE T1.ACCMO REGEXP '09|08'
)T1
GROUP BY
 T1.COMP_CLASSIFY2,
 T1.ACCMO;)


	
-- 各区域销售、DTP、特药销售占比
DROP TABLE
IF
	EXISTS dm_sale_bus_pro_dtp;
CREATE TABLE dm_sale_bus_pro_dtp AS SELECT
T1.*
FROM
	( SELECT T1.* FROM ods_sale_pro_quart09 T1 UNION ALL SELECT T1.* FROM ods_sale_pro_quart09_ T1 ) T1
	INNER JOIN ( SELECT DISTINCT compid, wareid FROM dim_dxh_ware WHERE DTP_TEMP_FLAG = 1 AND MAX_DATE > '2020-08-31' ) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
WHERE 
  T1.ACCMO REGEXP '09';
	
	
	DROP TABLE
IF
	EXISTS dm_sale_bus_pro_udtp;
CREATE TABLE dm_sale_bus_pro_udtp AS SELECT
T1.*
FROM
	( SELECT T1.* FROM ods_sale_pro_quart09 T1 UNION ALL SELECT T1.* FROM ods_sale_pro_quart09_ T1 ) T1
	INNER JOIN ( SELECT DISTINCT compid, wareid FROM dim_dxh_ware WHERE DTP_TEMP_FLAG = 0 AND MAX_DATE > '2020-08-31' ) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
WHERE 
  T1.ACCMO REGEXP '09';
	
	
	DROP TABLE
IF
	EXISTS dm_sale_bus_pro_ty;
CREATE TABLE dm_sale_bus_pro_ty AS SELECT
T1.*
FROM
	( SELECT T1.* FROM ods_sale_pro_quart09 T1 UNION ALL SELECT T1.* FROM ods_sale_pro_quart09_ T1 ) T1
	INNER JOIN ( SELECT DISTINCT compid, wareid FROM dim_dxh_ware WHERE TY_FLAG = 1 AND MAX_DATE > '2020-08-31' ) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
WHERE 
  T1.ACCMO REGEXP '09';
	
	
		DROP TABLE
IF
	EXISTS dm_sale_bus_pro_all;
CREATE TABLE dm_sale_bus_pro_all AS SELECT
T1.*,
t2.first_class,
t2.second_class,
t2.third_class,
t2.forth_class,
t2.fifth_class
FROM
	( SELECT T1.* FROM ods_sale_pro_quart09 T1 UNION ALL SELECT T1.* FROM ods_sale_pro_quart09_ T1 ) T1
	INNER JOIN ( SELECT DISTINCT compid, wareid,first_class,
second_class,
third_class,
forth_class,
fifth_class FROM dim_dxh_ware WHERE  MAX_DATE > '2020-08-31' ) T2 ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
WHERE 
  T1.ACCMO REGEXP '09';
-- 全部销售
-- 全部销售
	( SELECT
-- 	 	T1.COMP_CLASSIFY2,
-- 		T1.COMP_CLASSIFY1,
-- 		SUM(T1.ZYYF_COUNT) AS 
		SUM(T1.NETAMT_NO_TOTAL) AS 总销售,
		SUM(T1.NETAMT_NO_ZYYF) AS 专业药房,
		SUM(T1.NETAMT_NO_DTP) AS DTP品种,
		SUM(T1.NETAMT_NO_TY) AS 特药,
		ROUND(sum(T1.MAOLI_TOTAL)/SUM(T1.NETAMT_NO_TOTAL)*100,1) AS 总毛利率,
		ROUND(sum(T1.MAOLI_ZYYF)/SUM(T1.NETAMT_NO_ZYYF)*100,1) AS 专业药房毛利率,
		ROUND(sum(T1.MAOLI_DTP)/SUM(T1.NETAMT_NO_DTP)*100,1) AS DTP品种毛利率,
		ROUND(sum(T1.MAOLI_TY)/SUM(T1.NETAMT_NO_TY)*100,1) AS 特药毛利率,
		ROUND(sum(T1.NETAMT_NO_ZYYF)/SUM(T1.NETAMT_NO_TOTAL)*100,1) AS 专业占比,
		ROUND(sum(T1.NETAMT_NO_DTP)/SUM(T1.NETAMT_NO_TOTAL)*100,1) AS DTP品种占比,
		ROUND(sum(T1.NETAMT_NO_TY)/SUM(T1.NETAMT_NO_TOTAL)*100,1) AS 特药占比
	 FROM 
	 (SELECT 
	  T1.COMPID,
		T5.COMP_CLASSIFY2,
		T5.COMP_CLASSIFY1,
	  T1.NETAMT_NO_TOTAL,
    T1.MAOLI_TOTAL,
		T2.ZYYF_COUNT,
		T2.NETAMT_NO_ZYYF,
    T2.MAOLI_ZYYF,
		T3.NETAMT_NO_DTP,
    T3.MAOLI_DTP,
		T4.NETAMT_NO_TY,
    T4.MAOLI_TY
	FROM 
	(SELECT
	 T1.COMPID,
	 ROUND(SUM(T1.NETAMT_NO1 ),1) AS NETAMT_NO_TOTAL,
	 ROUND(SUM(T1.MAOLI ),1) AS MAOLI_TOTAL
	FROM 
	(SELECT COMPID,NETAMT_NO1,ROUND(NETAMT_NO1-PURAMT_NO1,1) AS MAOLI FROM dm_sale_bus_pro_all
	WHERE ACCMO = '2020-09')T1
	GROUP BY
		COMPID)T1
	LEFT JOIN   -- 专业药房
	(SELECT
	 T1.COMPID,
	 COUNT(DISTINCT BUSNO) AS ZYYF_COUNT,
	 ROUND(SUM(T1.NETAMT_NO1 ),1) AS NETAMT_NO_ZYYF,
	 	 ROUND(SUM(T1.MAOLI ),1) AS MAOLI_ZYYF
	FROM 
	(SELECT T1.COMPID,T1.BUSNO,T1.NETAMT_NO1,ROUND(NETAMT_NO1-PURAMT_NO1,1) AS MAOLI FROM dm_sale_bus_pro_all T1
	 LEFT JOIN DIM_DXH_BUSI T2 ON T1.BUSNO = T2.BUSNO 
	WHERE T1.ACCMO = '2020-09' 
	AND T2.ORG_DTP_TYPE = '专业药房'
	)T1
	GROUP BY
		COMPID) T2	ON T1.COMPID = T2.COMPID
	 LEFT JOIN -- 区域DTP品种
		(	SELECT
	 T1.COMPID,
	 COUNT(DISTINCT BUSNO) AS DTP_COUNT,
	 ROUND(SUM(T1.NETAMT_NO1 ),1) AS NETAMT_NO_DTP,
	 	 ROUND(SUM(T1.MAOLI ),1) AS MAOLI_DTP
	FROM 
	(SELECT T1.COMPID,T1.BUSNO,T1.NETAMT_NO1,ROUND(NETAMT_NO1-PURAMT_NO1,1) AS MAOLI FROM dm_sale_bus_pro_dtp T1
	WHERE T1.ACCMO = '2020-09')T1
	GROUP BY
		COMPID)T3	ON T1.COMPID = T3.COMPID
	 LEFT JOIN -- 特药品种
	(		SELECT
	 T1.COMPID,
	 COUNT(DISTINCT BUSNO) AS TY_COUNT,
	 ROUND(SUM(T1.NETAMT_NO1 ),1) AS NETAMT_NO_TY,
	 	 ROUND(SUM(T1.MAOLI ),1) AS MAOLI_TY
	FROM 
	(SELECT T1.COMPID,T1.BUSNO,T1.NETAMT_NO1,ROUND(NETAMT_NO1-PURAMT_NO1,1) AS MAOLI FROM dm_sale_bus_pro_ty T1
	WHERE T1.ACCMO = '2020-09' )T1
	GROUP BY
		COMPID)	T4 ON T1.COMPID = T4.COMPID
	LEFT JOIN dim_dxh_company T5 ON T1.COMPID = T5.COMPID)T1
	WHERE T1.COMP_CLASSIFY1 IN('北京','武汉三九','山东','华东区域')
	GROUP BY
		T1.COMP_CLASSIFY2,
		T1.COMP_CLASSIFY1
	)
	
-- 查询DTP专业门店中的特性
-- 专业药房总销售
(SELECT 
--     T1.COMP_CLASSIFY2,
-- 		T1.STARTEY_CLASSIFY,
-- T1.COMP_CLASSIFY1,
		SUM(T1.ZYYF_COUNT) AS ZYYF_COUNT,
		SUM(T1.NETAMT_NO_ZYYF) AS 专业药房,
		SUM(T1.NETAMT_NO_DTP) AS DTP品种,
		SUM(T1.NETAMT_NO_TY) AS 特药,
		ROUND(sum(T1.MAOLI_ZYYF)/SUM(T1.NETAMT_NO_ZYYF)*100,1) AS 专业药房毛利率,
		ROUND(sum(T1.MAOLI_DTP)/SUM(T1.NETAMT_NO_DTP)*100,1) AS DTP品种毛利率,
		ROUND(sum(T1.MAOLI_TY)/SUM(T1.NETAMT_NO_TY)*100,1) AS 特药毛利率,
		ROUND(sum(T1.NETAMT_NO_DTP)/SUM(T1.NETAMT_NO_ZYYF)*100,1) AS DTP品种占比,
		ROUND(sum(T1.NETAMT_NO_TY)/SUM(T1.NETAMT_NO_ZYYF)*100,1) AS 特药占比
FROM 
(SELECT 
    T1.COMPID,
		T1.BUSNO,
		T4.COMP_CLASSIFY1,
		T4.COMP_CLASSIFY2,
		T4.COMPNAME,
		T5.ORGNAME,
		T1.ZYYF_COUNT,
		T1.NETAMT_NO_ZYYF,
    T1.MAOLI_ZYYF,
		T2.NETAMT_NO_DTP,
    T2.MAOLI_DTP,
		T3.NETAMT_NO_TY,
    T3.MAOLI_TY
FROM
(SELECT
	 T1.COMPID,
	 T1.BUSNO,
	 COUNT(DISTINCT BUSNO) AS ZYYF_COUNT,
	 ROUND(SUM(T1.NETAMT_NO1 ),1) AS NETAMT_NO_ZYYF,
	 	 ROUND(SUM(T1.MAOLI ),1) AS MAOLI_ZYYF
	FROM 
	(SELECT T1.COMPID,T1.BUSNO,T1.NETAMT_NO1,ROUND(NETAMT_NO1-PURAMT_NO1,1) AS MAOLI FROM dm_sale_bus_pro_all T1
	 LEFT JOIN DIM_DXH_BUSI T2 ON T1.BUSNO = T2.BUSNO 
	WHERE T1.ACCMO = '2020-09' AND T2.ORG_DTP_TYPE = '专业药房')T1
	GROUP BY
		COMPID,
		BUSNO)T1
	LEFT JOIN 	-- 专业药房中的DTP
	(SELECT
	 T1.COMPID,
	 T1.BUSNO,
	 COUNT(DISTINCT BUSNO) AS DTP_COUNT,
	 ROUND(SUM(T1.NETAMT_NO1 ),1) AS NETAMT_NO_DTP,
	 	 ROUND(SUM(T1.MAOLI ),1) AS MAOLI_DTP
	FROM 
	(SELECT T1.COMPID,T1.BUSNO,T1.NETAMT_NO1,ROUND(NETAMT_NO1-PURAMT_NO1,1) AS MAOLI FROM DM_SALE_BUS_PRO_DTP T1
	 LEFT JOIN DIM_DXH_BUSI T2 ON T1.BUSNO = T2.BUSNO 
	WHERE T1.ACCMO = '2020-09' AND T2.ORG_DTP_TYPE = '专业药房' )T1
	GROUP BY
		COMPID,
		BUSNO)t2 ON T1.BUSNO =T2.BUSNO
	LEFT JOIN  -- 专业药房中的特药
	(SELECT
	 T1.COMPID,
	 T1.BUSNO,
	 COUNT(DISTINCT BUSNO) AS TY_COUNT,
	 ROUND(SUM(T1.NETAMT_NO1 ),1) AS NETAMT_NO_TY,
	 	 ROUND(SUM(T1.MAOLI ),1) AS MAOLI_TY
	FROM 
	(SELECT T1.COMPID,T1.BUSNO,T1.NETAMT_NO1,ROUND(NETAMT_NO1-PURAMT_NO1,1) AS MAOLI FROM DM_SALE_BUS_PRO_ty T1
	 LEFT JOIN DIM_DXH_BUSI T2 ON T1.BUSNO = T2.BUSNO 
	WHERE T1.ACCMO = '2020-09' AND T2.ORG_DTP_TYPE = '专业药房' )T1
	GROUP BY
		COMPID,
		BUSNO)t3  ON T1.BUSNO =T3.BUSNO
		LEFT JOIN dim_dxh_company T4 ON T1.COMPID =T4.COMPID
		LEFT JOIN DIM_DXH_BUSI T5 ON T1.BUSNO = T5.BUSNO)t1
	WHERE T1.COMP_CLASSIFY1 IN('北京','武汉三九','山东','华东区域')
	GROUP BY 
	 T1.COMP_CLASSIFY2,
-- 		T1.STARTEY_CLASSIFY,
T1.COMP_CLASSIFY1;
		)
		
		
-- 查询具体药房的销售的一个分布情况：
(SELECT 
    T1.COMP_CLASSIFY1,
		T1.STARTEY_CLASSIFY,
		T1.BUSNO,
		t2.orgname,
		SUM(T1.ZYYF_COUNT) AS ZYYF_COUNT,
		SUM(T1.NETAMT_NO_ZYYF) AS 专业药房,
		SUM(T1.NETAMT_NO_DTP) AS DTP品种,
		SUM(T1.NETAMT_NO_TY) AS 特药,
		ROUND(sum(T1.MAOLI_ZYYF)/SUM(T1.NETAMT_NO_ZYYF)*100,1) AS 专业药房毛利率,
		ROUND(sum(T1.MAOLI_DTP)/SUM(T1.NETAMT_NO_DTP)*100,1) AS DTP品种毛利率,
		ROUND(sum(T1.MAOLI_TY)/SUM(T1.NETAMT_NO_TY)*100,1) AS 特药毛利率,
		ROUND(sum(T1.NETAMT_NO_DTP)/SUM(T1.NETAMT_NO_ZYYF)*100,1) AS DTP品种占比,
		ROUND(sum(T1.NETAMT_NO_TY)/SUM(T1.NETAMT_NO_ZYYF)*100,1) AS 特药占比
FROM 
(SELECT 
    T1.COMPID,
		T1.BUSNO,
		T4.COMP_CLASSIFY1,
		T4.STARTEY_CLASSIFY,
		T4.COMPNAME,
		T5.ORGNAME,
		T1.ZYYF_COUNT,
		T1.NETAMT_NO_ZYYF,
    T1.MAOLI_ZYYF,
		T2.NETAMT_NO_DTP,
    T2.MAOLI_DTP,
		T3.NETAMT_NO_TY,
    T3.MAOLI_TY
FROM
(SELECT
	 T1.COMPID,
	 T1.BUSNO,
	 COUNT(DISTINCT BUSNO) AS ZYYF_COUNT,
	 ROUND(SUM(T1.NETAMT_NO1 ),1) AS NETAMT_NO_ZYYF,
	 	 ROUND(SUM(T1.MAOLI ),1) AS MAOLI_ZYYF
	FROM 
	(SELECT T1.COMPID,T1.BUSNO,T1.NETAMT_NO1,ROUND(NETAMT_NO1-PURAMT_NO1,1) AS MAOLI FROM DM_SALE_BUS_PRO_DTP T1
	 LEFT JOIN DIM_DXH_BUSI T2 ON T1.BUSNO = T2.BUSNO 
	WHERE T1.ACCMO = '2020-08' AND T2.ORG_DTP_TYPE = '专业药房')T1
	GROUP BY
		COMPID,
		BUSNO)T1
	LEFT JOIN 	-- 专业药房中的DTP
	(SELECT
	 T1.COMPID,
	 T1.BUSNO,
	 COUNT(DISTINCT BUSNO) AS DTP_COUNT,
	 ROUND(SUM(T1.NETAMT_NO1 ),1) AS NETAMT_NO_DTP,
	 	 ROUND(SUM(T1.MAOLI ),1) AS MAOLI_DTP
	FROM 
	(SELECT T1.COMPID,T1.BUSNO,T1.NETAMT_NO1,ROUND(NETAMT_NO1-PURAMT_NO1,1) AS MAOLI FROM DM_SALE_BUS_PRO_DTP T1
	 LEFT JOIN DIM_DXH_BUSI T2 ON T1.BUSNO = T2.BUSNO 
	WHERE T1.ACCMO = '2020-08' AND T1.DTP_FLAG = 1 AND T2.ORG_DTP_TYPE = '专业药房' )T1
	GROUP BY
		COMPID,
		BUSNO)t2 ON T1.BUSNO =T2.BUSNO
	LEFT JOIN  -- 专业药房中的特药
	(SELECT
	 T1.COMPID,
	 T1.BUSNO,
	 COUNT(DISTINCT BUSNO) AS TY_COUNT,
	 ROUND(SUM(T1.NETAMT_NO1 ),1) AS NETAMT_NO_TY,
	 ROUND(SUM(T1.MAOLI ),1) AS MAOLI_TY
	FROM 
	(SELECT T1.COMPID,T1.BUSNO,T1.NETAMT_NO1,ROUND(NETAMT_NO1-PURAMT_NO1,1) AS MAOLI FROM DM_SALE_BUS_PRO_DTP T1
	 LEFT JOIN DIM_DXH_BUSI T2 ON T1.BUSNO = T2.BUSNO 
	WHERE T1.ACCMO = '2020-08' AND T1.TY_FLAG = 1 AND T2.ORG_DTP_TYPE = '专业药房' )T1
	GROUP BY
		COMPID,
		BUSNO)t3  ON T1.BUSNO =T3.BUSNO
		LEFT JOIN dim_dxh_company T4 ON T1.COMPID =T4.COMPID
		LEFT JOIN DIM_DXH_BUSI T5 ON T1.BUSNO = T5.BUSNO)t1
		left join dim_dxh_busi  t2 on t1.busno = t2.busno  
	GROUP BY 
	T1.COMP_CLASSIFY1,
	T1.BUSNO;
		-- T1.STARTEY_CLASSIFY;
		)
		
		
-- 医商主码产品分类:化学药与
(SELECT
  comp_classify2,
  FIRST_CLASS,
  SECOND_CLASS,
-- 	THIRD_CLASS,
	ROUND(SUM(WARE_CNT20),1) AS WARE_CNT20,
	ROUND(SUM(NETAMT_NO20),1) AS NETAMT_NO20,
	ROUND(SUM(MAOLI20),1) AS MAOLI20,
	ROUND(SUM(MAOLI20)/SUM(NETAMT_NO20)*100,1) AS MAOLI_RATE,
	ROUND(SUM(NETAMT_NO20)/SUM(NETAMT_NO19)*100-100,1) AS RATE_NET,
	ROUND(SUM(MAOLI20)/SUM(MAOLI19)*100-100,1) AS RATE_MAOLI,
	ROUND(SUM(WARE_CNT20) - SUM(WARE_CNT19)) AS WARE_CHA,
	ROUND(SUM(MAOLI20)/SUM(NETAMT_NO20)*100,1)-ROUND(SUM(MAOLI19)/SUM(NETAMT_NO19)*100,1) AS MAOLI_cha
FROM
(SELECT
	comp_classify2,
  FIRST_CLASS,
	SECOND_CLASS,
	THIRD_CLASS,
	FORTH_CLASS,
	MAX( CASE WHEN t1.ACCMO = '2019-09' THEN t1.WARE_CNT ELSE 0 END) AS  WARE_CNT19,
	MAX(CASE WHEN t1.ACCMO = '2020-09' THEN t1.WARE_CNT ELSE 0 END) AS  WARE_CNT20,
	MAX( CASE WHEN t1.ACCMO = '2019-09' THEN t1.NETAMT_NO ELSE 0 END) AS  NETAMT_NO19,
	MAX(CASE WHEN t1.ACCMO = '2020-09' THEN t1.NETAMT_NO ELSE 0 END) AS  NETAMT_NO20,
	MAX( CASE WHEN t1.ACCMO = '2019-09' THEN t1.MAOLI  ELSE 0 END) AS  MAOLI19,
	MAX(CASE WHEN t1.ACCMO = '2020-09' THEN t1.MAOLI  ELSE 0 END) AS  MAOLI20
FROM
(SELECT
	t1.ACCMO,
	T1.COMPID,
	t2.comp_classify2,
	t1.FIRST_CLASS,
	t1.SECOND_CLASS,
	t1.THIRD_CLASS,
	t1.FORTH_CLASS,
	COUNT(SMDM_PRODUCT_NUM2 ) AS WARE_CNT,
	SUM( t1.NETAMT_NO1 ) AS NETAMT_NO,
	ROUND( SUM( t1.NETAMT_NO1 - PURAMT_NO1 ), 1 ) AS MAOLI 
FROM
		( SELECT
			T1.ACCMO,
			T1.COMPID,
			t1.busno,
			T1.FIRST_CLASS,
			T1.SECOND_CLASS,
			T1.THIRD_CLASS,
			T1.FORTH_CLASS,
			T1.NETAMT_NO1,
			T1.PURAMT_NO1,
			CASE
					
					WHEN T1.MDM_PRODUCT_NUM2 = '无主码' THEN
					T1.warecode ELSE T1.MDM_PRODUCT_NUM2 
				END AS SMDM_PRODUCT_NUM2 
			FROM
				dm_sale_bus_pro_all T1
		INNER JOIN (SELECT BUSNO FROM DIM_DXH_BUSI WHERE ORG_DTP_TYPE = '社区药房' )T2 ON T1.BUSNO = T2.BUSNO
)t1
left join dim_dxh_company t2 on t1.compid = t2.compid
GROUP BY
	t1.ACCMO,
	t1.COMPID,
	t1.FIRST_CLASS,
	t1.SECOND_CLASS,
	t1.THIRD_CLASS,
	t1.FORTH_CLASS)T1
	GROUP BY
	comp_classify2,
	FIRST_CLASS,
	SECOND_CLASS,
	THIRD_CLASS,
	FORTH_CLASS
-- 	HAVING
-- 	SECOND_CLASS IN ('化学药品','生物制品')
	)T1
	GROUP BY 
	comp_classify2,
	FIRST_CLASS,
	SECOND_CLASS
	having comp_classify2 REGEXP '北京|山东|江苏|武汉|浙江'
-- 	THIRD_CLASS;
-- 	LIMIT 10
		)
		
-- 医商主码产品分类:化学药与
(SELECT
--   FIRST_CLASS,
--   SECOND_CLASS,
-- 	THIRD_CLASS,
	ROUND(SUM(NETAMT_NO20),1) AS NETAMT_NO20,
	ROUND(SUM(MAOLI20),1) AS MAOLI20,
	ROUND(SUM(MAOLI20)/SUM(NETAMT_NO20)*100,1) AS MAOLI_RATE,
	ROUND(SUM(NETAMT_NO20)/SUM(NETAMT_NO19)*100-100,1) AS RATE_NET,
	ROUND(SUM(MAOLI20)/SUM(MAOLI19)*100-100,1) AS RATE_MAOLI,
	ROUND(SUM(MAOLI20)/SUM(NETAMT_NO20)*100,1)-ROUND(SUM(MAOLI19)/SUM(NETAMT_NO19)*100,1) AS MAOLI_cha
FROM
(SELECT
  FIRST_CLASS,
	SECOND_CLASS,
	THIRD_CLASS,
	FORTH_CLASS,

	MAX( CASE WHEN t1.ACCMO = '2019-08' THEN t1.NETAMT_NO ELSE 0 END) AS  NETAMT_NO19,
	MAX(CASE WHEN t1.ACCMO = '2020-08' THEN t1.NETAMT_NO ELSE 0 END) AS  NETAMT_NO20,
	MAX( CASE WHEN t1.ACCMO = '2019-08' THEN t1.MAOLI  ELSE 0 END) AS  MAOLI19,
	MAX(CASE WHEN t1.ACCMO = '2020-08' THEN t1.MAOLI  ELSE 0 END) AS  MAOLI20
FROM
(SELECT
	ACCMO,
	FIRST_CLASS,
	SECOND_CLASS,
	THIRD_CLASS,
	FORTH_CLASS,
	SUM( NETAMT_NO1 ) AS NETAMT_NO,
	ROUND( SUM( NETAMT_NO1 - PURAMT_NO1 ), 1 ) AS MAOLI 
FROM
	dm_sale_bus_pro_dtp
GROUP BY
	ACCMO,
	FIRST_CLASS,
	SECOND_CLASS,
	THIRD_CLASS,
	FORTH_CLASS)T1
	GROUP BY
	FIRST_CLASS,
	SECOND_CLASS,
	THIRD_CLASS,
	FORTH_CLASS
	HAVING
	SECOND_CLASS IN ('中成药')
	)T1
-- 	GROUP BY 
-- 	FIRST_CLASS,
-- 	SECOND_CLASS,
--   THIRD_CLASS;
	)
	
--  品类按照各个区域划分
	(SELECT
-- 	T1.COMP_CLASSIFY1,
--   T1.FIRST_CLASS,
--   T1.SECOND_CLASS,
-- 	T1.THIRD_CLASS,
-- 	T1.FORTH_CLASS,
	ROUND(SUM(WARE_CNT20),1) AS WARE_CNT20,
	ROUND(SUM(NETAMT_NO20),1) AS NETAMT_NO20,
	ROUND(SUM(MAOLI20),1) AS MAOLI20,
	ROUND(SUM(MAOLI20)/SUM(NETAMT_NO20)*100,1) AS MAOLI_RATE,
	ROUND(SUM(NETAMT_NO20)/SUM(NETAMT_NO19)*100-100,1) AS RATE_NET,
	ROUND(SUM(MAOLI20)/SUM(MAOLI19)*100-100,1) AS RATE_MAOLI,
	ROUND(SUM(WARE_CNT20) - SUM(WARE_CNT19)) AS WARE_CHA,
	ROUND(SUM(MAOLI20)/SUM(NETAMT_NO20)*100,1)-ROUND(SUM(MAOLI19)/SUM(NETAMT_NO19)*100,1) AS MAOLI_cha
FROM
(SELECT
--   T1.COMPID,
--   T2.COMP_CLASSIFY1,
--   T1.FIRST_CLASS,
-- 	T1.SECOND_CLASS,
	T1.THIRD_CLASS,
	T1.FORTH_CLASS,
	MAX( CASE WHEN t1.ACCMO = '2019-08' THEN t1.WARE_CNT ELSE 0 END) AS  WARE_CNT19,
	MAX(CASE WHEN t1.ACCMO = '2020-08' THEN t1.WARE_CNT ELSE 0 END) AS  WARE_CNT20,
	MAX( CASE WHEN t1.ACCMO = '2019-08' THEN t1.NETAMT_NO ELSE 0 END) AS  NETAMT_NO19,
	MAX(CASE WHEN t1.ACCMO = '2020-08' THEN t1.NETAMT_NO ELSE 0 END) AS  NETAMT_NO20,
	MAX( CASE WHEN t1.ACCMO = '2019-08' THEN t1.MAOLI  ELSE 0 END) AS  MAOLI19,
	MAX(CASE WHEN t1.ACCMO = '2020-08' THEN t1.MAOLI  ELSE 0 END) AS  MAOLI20
FROM
(SELECT
	ACCMO,
-- 	FIRST_CLASS,
-- 	SECOND_CLASS,
	THIRD_CLASS,
	FORTH_CLASS,
	COUNT(SMDM_PRODUCT_NUM2 ) AS WARE_CNT,
	SUM( NETAMT_NO1 ) AS NETAMT_NO,
	ROUND( SUM( NETAMT_NO1 - PURAMT_NO1 ), 1 ) AS MAOLI 
FROM
			( SELECT
			ACCMO,
			FIRST_CLASS,
			SECOND_CLASS,
			THIRD_CLASS,
			FORTH_CLASS,
			NETAMT_NO1,
			PURAMT_NO1,
			CASE
					
					WHEN SMDM_PRODUCT_NUM2 = '无主码' THEN
					warecode ELSE SMDM_PRODUCT_NUM2 
				END AS SMDM_PRODUCT_NUM2 
			FROM
				dm_sale_bus_pro_dtp 
			WHERE
			compid IN ( '2101', '2102', '2106' ) and ty_flag =0)t1
GROUP BY
	t1.ACCMO,
-- 	t1.FIRST_CLASS,
-- 	t1.SECOND_CLASS,
	t1.THIRD_CLASS,
	t1.FORTH_CLASS)T1
	GROUP BY
-- 	T1.COMPID,
-- 	T1.FIRST_CLASS,
-- 	T1.SECOND_CLASS,
	T1.THIRD_CLASS,
	T1.FORTH_CLASS
	)T1
	GROUP BY 
-- 	T1.COMP_CLASSIFY1,
-- 	T1.FIRST_CLASS,
-- 	T1.SECOND_CLASS,
-- 	T1.THIRD_CLASS,
-- 	T1.FORTH_CLASS;
	)
	
-- 产品近效期— 阿胶
(SELECT
--   T1.COMP_CLASSIFY1,
	T1.STORE_MONTH,
	sum( T1.WAREQTY ) AS WAREQTY,
	SUM( T1.PURAMT_NO1 ) AS PURAMT_NO1,
	sum( T1.WARE_CNT ) AS WARE_CNT 
FROM
	(
	SELECT
		T1.COMP_CLASSIFY1,
		T1.STORE_MONTH,
		T1.COMPID,
		t1.busno,
		T1.WAREQTY,
		T1.PURAMT_NO1,
		T1.WARE_CNT 
	FROM
		(
		SELECT
			T1.COMP_CLASSIFY1,
			T1.STORE_MONTH,
			T1.COMPID,
			t1.busno,
			sum( T1.WAREQTY ) AS WAREQTY,
			SUM( T1.PURAMT_NO1 ) AS PURAMT_NO1,
			COUNT(
			DISTINCT CONCAT( COMPID, WARECODE )) AS WARE_CNT 
		FROM
			(
			SELECT
				T1.COMPID,
				t1.busno,
				T1.COMP_CLASSIFY1,
				T1.STARTEY_CLASSIFY,
				T1.WARECODE,
				T1.WAREQTY,
			CASE
					
					WHEN T1.STORE_MONTH > 12 THEN
					'12M' ELSE T1.STORE_MONTH 
				END AS STORE_MONTH,
				T1.PURAMT_NO1 
			FROM
				(
				SELECT
					T1.COMPID,
					T2.COMP_CLASSIFY1,
					T2.STARTEY_CLASSIFY,
					T1.WARECODE,
					t1.busno,
					T1.WAREID,
					T1.WAREQTY,
					ROUND( T1.WAREQTY * T1.PURPRICE, 1 ) AS PURAMT_NO1,
					ROUND( DATEDIFF( T1.INVALIDATE, SYSDATE())/ 30+1, 0 ) AS STORE_MONTH 
				FROM
					ods_t_store_detail t1
					INNER JOIN ( SELECT STARTEY_CLASSIFY, COMP_CLASSIFY1, COMPID FROM dim_dxh_company WHERE STARTEY_CLASSIFY <> '无' ) T2 ON T1.COMPID = T2.COMPID 
				WHERE
					T1.WAREQTY < 284000 
				) T1 
			) T1 
		GROUP BY
			T1.COMP_CLASSIFY1,
			T1.STORE_MONTH,
			T1.COMPID,
			t1.busno 
		) t1 
-- 		inner JOIN (select STARTEY_CLASSIFY,COMP_CLASSIFY1, COMPID from dim_dxh_company where STARTEY_CLASSIFY<>'无') T2 ON T1.COMPID=T2.COMPID)T1
		INNER JOIN ( SELECT BUSNO FROM dim_dxh_busi WHERE ORG_SALE_STATUS = '未在营' 
-- 		AND MIN_ACCDATE NOT REGEXP '2020-09'
		and MAX_SACCDATE IN ('2020-10-01','2020-09-01') 
		) t3 ON t1.busno = t3.busno 
	) t1 
GROUP BY
-- 	T1.COMP_CLASSIFY1,
	T1.STORE_MONTH;
)	
	

	
-- 汇总的库存:马莉分类
(SELECT
--   T1.COMP_CLASSIFY2,
	T1.STORE_MONTH,
	sum( T1.WAREQTY ) AS WAREQTY,
	SUM( T1.PURAMT_NO1 ) AS PURAMT_NO1,
	sum( T1.WARE_CNT ) AS WARE_CNT 
FROM
	(
	SELECT
		T1.COMP_CLASSIFY2,
		T1.STORE_MONTH,
		T1.COMPID,
		t1.busno,
		T1.WAREQTY,
		T1.PURAMT_NO1,
		T1.WARE_CNT 
	FROM
		(
		SELECT
			T1.COMP_CLASSIFY2,
			T1.STORE_MONTH,
			T1.COMPID,
			t1.busno,
			sum( T1.WAREQTY ) AS WAREQTY,
			SUM( T1.PURAMT_NO1 ) AS PURAMT_NO1,
			COUNT(
			DISTINCT  WARECODE) AS WARE_CNT 
		FROM
			(
			SELECT
				T1.COMPID,
				t1.busno,
				T1.COMP_CLASSIFY2,
				T1.STARTEY_CLASSIFY,
				T1.WARECODE,
				T1.WAREQTY,
			CASE
					
					WHEN T1.STORE_MONTH > 12 THEN
					'12M' ELSE T1.STORE_MONTH 
				END AS STORE_MONTH,
				T1.PURAMT_NO1 
			FROM
				(
				SELECT
					T1.COMPID,
					T2.COMP_CLASSIFY2,
					T2.STARTEY_CLASSIFY,
					T1.WARECODE,
					t1.busno,
					T1.WAREID,
					T1.WAREQTY,
					ROUND( T1.WAREQTY * T1.PURPRICE, 1 ) AS PURAMT_NO1,
					ROUND( DATEDIFF( T1.INVALIDATE, SYSDATE())/ 30+1, 0 ) AS STORE_MONTH 
				FROM
					ods_t_store_detail t1
					INNER JOIN ( SELECT STARTEY_CLASSIFY, COMP_CLASSIFY2, COMPID FROM dim_dxh_company WHERE STARTEY_CLASSIFY = '直管' ) T2 ON T1.COMPID = T2.COMPID 
					INNER JOIN (
						SELECT DISTINCT
							T1.COMPID,
							T1.WAREID 
						FROM
							dim_dxh_ware T1 
							INNER JOIN ( SELECT COMPID FROM dim_dxh_company WHERE STARTEY_CLASSIFY = '直管' ) T2 ON T1.COMPID = T2.COMPID 
-- 						WHERE
-- 							T1.DTP_TEMP_FLAG = 1
						) T3 ON T1.COMPID = T3.COMPID AND T1.WAREID  = T3.WAREID 
				WHERE
					T1.WAREQTY < 284000 
				) T1 
			) T1 
		GROUP BY
			T1.COMP_CLASSIFY2,
			T1.STORE_MONTH,
			T1.COMPID,
			t1.busno 
		) t1 
-- 		 inner JOIN (select STARTEY_CLASSIFY,COMP_CLASSIFY1, COMPID from dim_dxh_company where STARTEY_CLASSIFY<>'无') T2 ON T1.COMPID=T2.COMPID)T1
		INNER JOIN ( SELECT busno FROM dim_dxh_busi WHERE ORG_SALE_STATUS ='未在营' 
and max_saccdate IN('2020-10-01','2020-09-01')
) 
		t3 ON t1.busno = t3.busno 
	) t1 
GROUP BY
-- 	T1.COMP_CLASSIFY2,
	T1.STORE_MONTH;	)

-- 近效期产品
	(
	SELECT
		T1.COMP_CLASSIFY2,
			T1.STORE_MONTH,
			T1.COMPID,
			t2.compname,
			t1.busno,
			t3.orgname,
			T1.WARECODE,
			T1.WARENAME,
			T1.INVALIDATE,
			T1.WAREQTY,
			T1.PURAMT_NO1,
			T1. WARE_CNT 
	FROM
		(
		SELECT
			T1.COMP_CLASSIFY2,
			T1.STORE_MONTH,
			T1.COMPID,
			t1.busno,
			T1.WARECODE,
			T1.WARENAME,
			T1.INVALIDATE,	
			sum( T1.WAREQTY ) AS WAREQTY,
			SUM( T1.PURAMT_NO1 ) AS PURAMT_NO1,
			COUNT(
			DISTINCT  WARECODE) AS WARE_CNT 
		FROM
			(
			SELECT
				T1.COMPID,
				t1.busno,
				T1.COMP_CLASSIFY2,
				T1.STARTEY_CLASSIFY,
				T1.WARECODE,
				T1.WAREID,
				T1.WARENAME,
				T1.WARESPEC,
				T1.FACTORYNAME,
				T1.WAREQTY,
				T1.INVALIDATE,
				T1.PURAMT_NO1,
				T1.STORE_MONTH
			FROM
				(
				SELECT
					T1.COMPID,
					T2.COMP_CLASSIFY2,
					T2.STARTEY_CLASSIFY,
					T1.WARECODE,
					t1.busno,
					T1.WAREID,
					T1.WARENAME,
					T1.WARESPEC,
					T1.FACTORYNAME,
					T1.WAREQTY,
					T1.INVALIDATE,
					ROUND( T1.WAREQTY * T1.PURPRICE, 1 ) AS PURAMT_NO1,
					ROUND( DATEDIFF( T1.INVALIDATE, SYSDATE())/ 30+1, 0 ) AS STORE_MONTH 
				FROM
					ods_t_store_detail t1
					INNER JOIN ( SELECT STARTEY_CLASSIFY, COMP_CLASSIFY2, COMPID FROM dim_dxh_company WHERE STARTEY_CLASSIFY <> '无' ) T2 ON T1.COMPID = T2.COMPID 
				WHERE
					T1.WAREQTY < 284000 
				) T1 
				WHERE STORE_MONTH between 0 and 2)t1
		GROUP BY
		T1.COMP_CLASSIFY2,
			T1.STORE_MONTH,
			T1.COMPID,
			t1.busno,
			T1.WARECODE,
			T1.WARENAME,
			T1.INVALIDATE
		) t1 
		 inner JOIN (select STARTEY_CLASSIFY,COMP_CLASSIFY1, compname,COMPID from dim_dxh_company where STARTEY_CLASSIFY<>'无') T2 ON T1.COMPID=T2.COMPID
		INNER JOIN ( SELECT busno,orgname FROM dim_dxh_busi WHERE ORG_SALE_STATUS = '在营' ) t3 ON t1.busno = t3.busno 
order by 
   T1.puramt_no1 desc
	))
	
	
-- 6.库存周转天
(SELECT SUM(t1.WAREQTY *t1.PURPRICE) FROM ods_t_store_detail T1 INNER JOIN ( SELECT STARTEY_CLASSIFY, COMP_CLASSIFY1, COMPID FROM dim_dxh_company WHERE STARTEY_CLASSIFY <> '无') t2 on t1.compid = t2.compid 
WHERE t1.WAREQTY< 284000 
AND T1.BUSNO = '21011003'
GROUP BY t2.compid
UNION ALL
SELECT '机构' AS 库存,t2.compid,SUM(t1.SUMQTY *t1.LASTPURPRICE) FROM ods_t_store_h T1 INNER JOIN ( SELECT STARTEY_CLASSIFY, COMP_CLASSIFY1, COMPID FROM dim_dxh_company WHERE STARTEY_CLASSIFY <> '无') t2 on t1.compid = t2.compid 
WHERE t1.SUMQTY< 284000 
GROUP BY t2.compid

SELECT SUM(t1.WAREQTY *t1.PURPRICE) FROM ods_t_store_detail T1 
WHERE t1.WAREQTY< 284000 
AND T1.BUSNO = '21011003'


-- 门店库存明细
DROP TABLE IF EXISTS dw_shop_store;
create table dw_shop_store as 
SELECT t1.COMPID, t1.BUSNO,t1.wareid,t1.warename,t1.warecode,t1.WAREQTY*t1.PURPRICE AS PUR_STORE FROM ods_t_store_detail t1 INNER JOIN ( SELECT busno FROM dim_dxh_busi WHERE ORG_SALE_STATUS = '在营' 
-- AND org_dtp_type = '社区药房'
AND org_dtp_type = '社区药房'
-- and max_saccdate<>'2020-09-01'
)  t2 on t1.busno = t2.busno
WHERE WAREQTY< 284000



-- 仓库库存明细
	DROP TABLE
	IF
		EXISTS dw_whare_store;
	CREATE TABLE dw_whare_store AS SELECT
	COMPID,
	t1.WAREQTY * t1.PURPRICE AS PUR_STORE 
	FROM
		ods_t_store_detail t1
		INNER JOIN ( SELECT busno FROM dim_dxh_busi WHERE ORG_SALE_STATUS = '未在营' 
		and max_saccdate IN ('2020-10-01','2020-09-01')
		) t2 ON t1.busno = t2.busno 
	WHERE
		WAREQTY < 284000

-- 仓库库存明细
DROP TABLE IF EXISTS dw_whare_store;
create table dw_whare_store as 
SELECT COMPID, t1.WAREQTY*t1.PURPRICE AS PUR_STORE FROM ods_t_store_detail0901 t1 INNER JOIN ( SELECT busno FROM dim_dxh_busi WHERE ORG_SALE_STATUS = '在营' 
-- and max_saccdate='2020-09-01'
)  t2 on t1.busno = t2.busno
WHERE WAREQTY< 284000


-- 库存周转天
SELECT 
--  T1.COMP_CLASSIFY1,
 ROUND(SUM(T1.WHARE_STORE)/10000,0) AS WHARE_STORE,
 ROUND(SUM(T1.SHOP_STORE)/10000,0) AS SHOP_STORE,
 ROUND(SUM(T1.WHARE_STORE)/SUM( T1.NETAMT_NO)*31,0) AS WHARE_STOREDAY,
 ROUND(SUM(T1.SHOP_STORE)/SUM( T1.NETAMT_NO)*31,0) AS SHOP_STOREDAY,
 ROUND(SUM(T1.TOTAL_STORE)/SUM( T1.NETAMT_NO)*31,0) AS TOTAL_STOREDAY
FROM 
(SELECT 
 T1.COMPID,
 T4.COMP_CLASSIFY1,
 T1.SHOP_STORE,
 ROUND(T1.SHOP_STORE/T3.NETAMT_NO*31,0) AS SHOP_STORE_DAY,
 T2.WHARE_STORE,
 T1.SHOP_STORE*1+IF(T2.WHARE_STORE IS NULL,0,T2.WHARE_STORE) AS TOTAL_STORE,
  ROUND(T2.WHARE_STORE/T3.NETAMT_NO*31,0) AS WHARE_STORE_DAY,
 T3.NETAMT_NO
FROM
(SELECT
	COMPID,
	ROUND(SUM( PUR_STORE ),1) AS SHOP_STORE 
FROM
	dw_shop_store
GROUP BY
  COMPID)T1
LEFT JOIN 
(SELECT
	COMPID,
	ROUND(SUM( PUR_STORE ),1) AS WHARE_STORE 
FROM
	dw_whare_store
GROUP BY
  COMPID)T2 ON T1.COMPID=T2.COMPID
	LEFT JOIN 
		( SELECT
			T1.COMPID,
			ROUND( SUM( NETAMT_NO2 ), 1 ) AS NETAMT_NO 
			FROM
				( SELECT COMPID, BUSNO, NETAMT_NO2 FROM ods_t_rpt_sale_m WHERE ACCYEAR = '2020' AND YEARMONTH = '09' ) T1
				INNER JOIN ( SELECT BUSNO FROM dim_dxh_busi WHERE ORG_DTP_TYPE = '社区药房' 
-- 				INNER JOIN ( SELECT BUSNO FROM dim_dxh_busi WHERE ORG_DTP_TYPE = '专业药房' 
				) T2 ON T1.BUSNO = T2.BUSNO 
			GROUP BY
				T1.COMPID 
			) T3 ON T1.COMPID = T3.COMPID
	LEFT JOIN dim_dxh_company T4 ON T1.COMPID = T4.COMPID)T1
GROUP BY  T1.COMP_CLASSIFY1;
	)
	
		
-- 6.2库存周转天：马莉分类
(

SELECT 
--  T1.COMP_CLASSIFY2,
 ROUND(SUM(T1.WHARE_STORE)/10000,0) AS WHARE_STORE,
 ROUND(SUM(T1.SHOP_STORE)/10000,0) AS SHOP_STORE,
 ROUND(SUM(T1.WHARE_STORE)/SUM( T1.NETAMT_NO)*31,0) AS WHARE_STOREDAY,
 ROUND(SUM(T1.SHOP_STORE)/SUM( T1.NETAMT_NO)*31,0) AS SHOP_STOREDAY,
 ROUND(SUM(T1.TOTAL_STORE)/SUM( T1.NETAMT_NO)*31,0) AS TOTAL_STOREDAY
FROM 
(SELECT 
 T1.COMPID,
 T4.COMP_CLASSIFY2,
 T1.SHOP_STORE,
 ROUND(T1.SHOP_STORE/T3.NETAMT_NO*31,0) AS SHOP_STORE_DAY,
 T2.WHARE_STORE,
 T1.SHOP_STORE*1+IF(T2.WHARE_STORE IS NULL,0,T2.WHARE_STORE) AS TOTAL_STORE,
  ROUND(T2.WHARE_STORE/T3.NETAMT_NO*31,0) AS WHARE_STORE_DAY,
 T3.NETAMT_NO
FROM
(SELECT
	COMPID,
	ROUND(SUM( PUR_STORE ),1) AS SHOP_STORE 
FROM
	dw_shop_store
GROUP BY
  COMPID)T1
LEFT JOIN 
(SELECT
	COMPID,
	ROUND(SUM( PUR_STORE ),1) AS WHARE_STORE 
FROM
	dw_whare_store
GROUP BY
  COMPID)T2 ON T1.COMPID=T2.COMPID
	LEFT JOIN 
		( SELECT
			T1.COMPID,
			ROUND( SUM( NETAMT_NO2 ), 1 ) AS NETAMT_NO 
			FROM
				( SELECT COMPID, BUSNO, NETAMT_NO2 FROM ods_t_rpt_sale_m WHERE ACCYEAR = '2020' AND YEARMONTH = '09' ) T1
								INNER JOIN ( SELECT BUSNO FROM dim_dxh_busi WHERE ORG_DTP_TYPE = '社区药房' 
-- 				INNER JOIN ( SELECT BUSNO FROM dim_dxh_busi WHERE ORG_DTP_TYPE = '专业药房' 
				) T2 ON T1.BUSNO = T2.BUSNO 
			GROUP BY
				T1.COMPID 
			) T3 ON T1.COMPID = T3.COMPID
	INNER JOIN (SELECT * FROM dim_dxh_company WHERE STARTEY_CLASSIFY ='直管') T4 ON T1.COMPID = T4.COMPID)T1
GROUP BY  T1.COMP_CLASSIFY2;
	)
	
	
	-- 在营连锁机构的比例
(DROP TABLE IF EXISTS DM_COMPMAIN_INDEX_S;
CREATE TABLE  DM_COMPMAIN_INDEX_S AS 
	SELECT
		T4.STARTEY_CLASSIFY,
		T4.COMP_CLASSIFY2,
-- 		T4.COMPNAME,
-- 		T1.COMPID,
		ROUND( T2.AVG_AREA_USEAREA * COMP_BUSCNT, 1 ) AS COMP_USEAREA,
		ROUND( T1.COMP_BWNT / ROUND( T2.AVG_AREA_USEAREA * COMP_BUSCNT, 1 ), 1 ) AS COMP_AREASKU,
		T1.COMP_BUSCNT,
		T1.COMP_WNT,
		T1.COMP_BWNT,
		T1.AVG_WNT,
		ROUND( T3.NETAMT_NO2 / COMP_BUSCNT, 1 ) AS AVGB_NETAMT_NO 
	FROM
		(
		SELECT
			T1.COMPID,
			COUNT( DISTINCT T1.BUSNO ) AS COMP_BUSCNT,
			COUNT(
			DISTINCT CONCAT( T1.COMPID, T1.WAREID )) AS COMP_WNT,
			COUNT(
			DISTINCT CONCAT( T1.COMPID, T1.BUSNO, T1.WAREID )) AS COMP_BWNT,
			ROUND( COUNT( DISTINCT CONCAT( T1.COMPID, T1.BUSNO, T1.WAREID ))/ COUNT( DISTINCT T1.BUSNO ), 1 ) AS AVG_WNT 
		FROM
			(
			SELECT
				T1.COMPID,
				T1.BUSNO,
				T1.WAREID 
			FROM
				(
				SELECT
					T1.COMPID,
					T1.BUSNO,
					T1.WAREID 
				FROM
					ods_t_store_detail T1 
				GROUP BY
					T1.COMPID,
					T1.BUSNO,
					T1.WAREID 
				) T1
				INNER JOIN ( SELECT BUSNO FROM DIM_DXH_BUSI WHERE ORG_DTP_TYPE = '专业药房' AND ORG_SALE_STATUS = '在营' ) T2 ON T1.BUSNO = T2.BUSNO 
			) T1 
		GROUP BY
			T1.COMPID 
		) T1
		LEFT JOIN (
		SELECT
			COMPID,
			ROUND( AVG( ORG_USABLEAREA ), 1 ) AS AVG_AREA_USEAREA 
		FROM
			( SELECT COMPID, ORG_USABLEAREA FROM DIM_DXH_BUSI WHERE ORG_DTP_TYPE = '专业药房' AND ORG_SALE_STATUS = '在营' ) T1 
		GROUP BY
			COMPID 
		) T2 ON T1.COMPID = T2.COMPID
		LEFT JOIN (
		SELECT
			T1.COMPID,
			ROUND( SUM( T1.NETAMT_NO2 )/ 10000, 1 ) AS NETAMT_NO2 
		FROM
			(
			SELECT
				T1.COMPID,
				T1.NETAMT_NO2 
			FROM
				ods_t_rpt_sale_m T1
				INNER JOIN ( SELECT BUSNO FROM DIM_DXH_BUSI WHERE ORG_DTP_TYPE = '专业药房' AND ORG_SALE_STATUS = '在营' ) T2 ON T1.BUSNO = T2.BUSNO 
			WHERE
				T1.ACCMONTH = '2020-09-01' 
			) T1 
		GROUP BY
			T1.COMPID 
		) T3 ON T1.COMPID = T3.COMPID
		INNER JOIN ( SELECT COMPID, COMPNAME, COMP_CLASSIFY2, STARTEY_CLASSIFY FROM DIM_DXH_COMPANY WHERE COMP_CLASSIFY1 REGEXP '山东|北京|华东|武汉'  ) T4 ON T1.COMPID = T4.COMPID 
	GROUP BY
	T4.COMP_CLASSIFY2
	WHERE
	T4.STARTEY_CLASSIFY IS NOT NULL)
	
-- 专业药房
(DROP TABLE IF EXISTS DM_COMPMAIN_INDEX_P;
CREATE TABLE  DM_COMPMAIN_INDEX_P AS 
SELECT
 T4.STARTEY_CLASSIFY,
 T4.COMP_CLASSIFY2,
 T4.COMPNAME,
 T1.COMPID,
 ROUND(T2.AVG_AREA_USEAREA*COMP_BUSCNT,1) AS COMP_USEAREA,
 ROUND(T1.COMP_BWNT/ROUND(T2.AVG_AREA_USEAREA*COMP_BUSCNT,1),1) AS COMP_AREASKU,
 T1.COMP_BUSCNT,
 T1.COMP_WNT,
 T1.COMP_BWNT,
 T1.AVG_WNT,
 ROUND(T3.NETAMT_NO2/COMP_BUSCNT,1) AS AVGB_NETAMT_NO
FROM 
(SELECT
T1.COMPID,
COUNT(DISTINCT T1.BUSNO) AS COMP_BUSCNT,
COUNT(DISTINCT CONCAT(T1.COMPID,T1.WAREID)) AS COMP_WNT,
COUNT(DISTINCT CONCAT(T1.COMPID,T1.BUSNO,T1.WAREID)) AS COMP_BWNT,
ROUND(COUNT(DISTINCT CONCAT(T1.COMPID,T1.BUSNO,T1.WAREID))/COUNT(DISTINCT T1.BUSNO),1) AS AVG_WNT
FROM 
(SELECT 
 T1.COMPID,
	T1.BUSNO,
	T1.WAREID
FROM 
(SELECT 
  T1.COMPID,
	T1.BUSNO,
	T1.WAREID
FROM
	ODS_T_STORE_H0901 T1
GROUP BY 
  T1.COMPID,
	T1.BUSNO,
	T1.WAREID)T1
	INNER JOIN (SELECT BUSNO FROM DIM_DXH_BUSI WHERE ORG_DTP_TYPE = '专业药房' AND ORG_SALE_STATUS = '在营') T2 ON T1.BUSNO = T2.BUSNO)T1
	GROUP BY 
	T1.COMPID)T1
LEFT JOIN (SELECT COMPID, ROUND(AVG(ORG_USABLEAREA),1) AS AVG_AREA_USEAREA FROM (SELECT COMPID, ORG_USABLEAREA FROM DIM_DXH_BUSI WHERE ORG_DTP_TYPE = '专业药房' AND ORG_SALE_STATUS = '在营')T1 GROUP BY COMPID)T2 ON T1.COMPID = T2.COMPID
LEFT JOIN (SELECT T1.COMPID,ROUND(SUM(T1.NETAMT_NO2)/10000,1) AS NETAMT_NO2 FROM (SELECT T1.COMPID,T1.NETAMT_NO2 FROM ods_rpt_sale_m T1 INNER JOIN (SELECT BUSNO FROM DIM_DXH_BUSI WHERE ORG_DTP_TYPE = '专业药房' AND ORG_SALE_STATUS = '在营') T2 ON T1.BUSNO = T2.BUSNO WHERE T1.ACCMONTH = '2020-08-01')T1 GROUP BY T1.COMPID )T3 ON T1.COMPID = T3.COMPID
LEFT JOIN (SELECT COMPID,COMPNAME,COMP_CLASSIFY1, STARTEY_CLASSIFY FROM DIM_DXH_COMPANY WHERE COMP_BUSCOUNT>10 AND STARTEY_CLASSIFY <>'无') T4 ON T1.COMPID = T4.COMPID
WHERE T4.STARTEY_CLASSIFY IS NOT NULL)

-- 全部品种
DROP TABLE IF EXISTS DM_COMPMAIN_INDEX_ALL;
CREATE TABLE  DM_COMPMAIN_INDEX_ALL AS 
SELECT
 T4.STARTEY_CLASSIFY,
 T4.COMP_CLASSIFY1,
 T4.COMPNAME,
 T1.COMPID,
 ROUND(T2.AVG_AREA_USEAREA*COMP_BUSCNT,1) AS COMP_USEAREA,
 ROUND(T1.COMP_BWNT/ROUND(T2.AVG_AREA_USEAREA*COMP_BUSCNT,1),1) AS COMP_AREASKU,
 T1.COMP_BUSCNT,
 T1.COMP_WNT,
 T1.COMP_BWNT,
 T1.AVG_WNT,
 ROUND(T3.NETAMT_NO2/COMP_BUSCNT,1) AS AVGB_NETAMT_NO
FROM 
(SELECT
T1.COMPID,
COUNT(DISTINCT T1.BUSNO) AS COMP_BUSCNT,
COUNT(DISTINCT CONCAT(T1.COMPID,T1.WAREID)) AS COMP_WNT,
COUNT(DISTINCT CONCAT(T1.COMPID,T1.BUSNO,T1.WAREID)) AS COMP_BWNT,
ROUND(COUNT(DISTINCT CONCAT(T1.COMPID,T1.BUSNO,T1.WAREID))/COUNT(DISTINCT T1.BUSNO),1) AS AVG_WNT
FROM 
(SELECT 
 T1.COMPID,
	T1.BUSNO,
	T1.WAREID
FROM 
(SELECT 
  T1.COMPID,
	T1.BUSNO,
	T1.WAREID
FROM
	ODS_T_STORE_H0901 T1
GROUP BY 
  T1.COMPID,
	T1.BUSNO,
	T1.WAREID)T1
	INNER JOIN (SELECT BUSNO FROM DIM_DXH_BUSI WHERE ORG_SALE_STATUS = '在营') T2 ON T1.BUSNO = T2.BUSNO)T1
	GROUP BY 
	T1.COMPID)T1
LEFT JOIN (SELECT COMPID, ROUND(AVG(ORG_USABLEAREA),1) AS AVG_AREA_USEAREA FROM (SELECT COMPID, ORG_USABLEAREA FROM DIM_DXH_BUSI WHERE ORG_SALE_STATUS = '在营')T1 GROUP BY COMPID)T2 ON T1.COMPID = T2.COMPID
LEFT JOIN (SELECT T1.COMPID,ROUND(SUM(T1.NETAMT_NO2)/10000,1) AS NETAMT_NO2 FROM (SELECT T1.COMPID,T1.NETAMT_NO2 FROM ods_rpt_sale_m T1 INNER JOIN (SELECT BUSNO FROM DIM_DXH_BUSI WHERE ORG_SALE_STATUS = '在营') T2 ON T1.BUSNO = T2.BUSNO WHERE T1.ACCMONTH = '2020-08-01')T1 GROUP BY T1.COMPID )T3 ON T1.COMPID = T3.COMPID
LEFT JOIN (SELECT COMPID,COMPNAME,COMP_CLASSIFY1, STARTEY_CLASSIFY FROM DIM_DXH_COMPANY WHERE COMP_BUSCOUNT>10 AND STARTEY_CLASSIFY <>'无') T4 ON T1.COMPID = T4.COMPID
WHERE T4.STARTEY_CLASSIFY IS NOT NULL
)


-- 毛利率占比分析
DROP TABLE IF EXISTS DM_MAOLI_RATIO_REPORT;
CREATE TABLE  DM_MAOLI_RATIO_REPORT AS 
SELECT
 T1.SMAOLI_RATIO_CLASSFIY,
 SUM(T1.COUNT19) AS MDM_COUNT19,
 SUM(T1.COUNT20) AS MDM_COUNT20,
 ROUND(SUM(T1.NETAMT_NO19)/10000,1) AS NETAMT_NO19,
 ROUND(SUM(T1.NETAMT_NO20)/10000,1) AS NETAMT_NO20,
 ROUND(SUM(T1.SMAOLI19)/10000,1) AS SMAOLI19,
 ROUND(SUM(T1.SMAOLI20)/10000,1)  AS SMAOLI20
FROM 
(SELECT
 T1.SMDM_PRODUCT_NUM,
 T1.SMAOLI_RATIO_CLASSFIY,
 MAX(IF(T1.ACCMO = '2019-09',1,0)) AS COUNT19,
 MAX(IF(T1.ACCMO = '2020-09',1,0)) AS COUNT20,
 MAX(IF(T1.ACCMO = '2019-09',T1.NETAMT_NO,0)) AS NETAMT_NO19,
 MAX(IF(T1.ACCMO = '2020-09',T1.NETAMT_NO,0)) AS NETAMT_NO20,
 MAX(IF(T1.ACCMO = '2019-09',T1.SMAOLI,0)) AS SMAOLI19,
 MAX(IF(T1.ACCMO = '2020-09',T1.SMAOLI,0)) AS SMAOLI20
FROM 
(SELECT 
T1.ACCMO,
	T1.SMDM_PRODUCT_NUM,
	T1.NETAMT_NO,
	T1.SMAOLI,
	CASE WHEN SMAOLI_RATIO<0 THEN 'P≤0%'
	     WHEN SMAOLI_RATIO BETWEEN 0 AND 10 THEN '0%<P≤10%'
			 WHEN SMAOLI_RATIO BETWEEN 10 AND 35 THEN '10%<P≤35%'
			 WHEN SMAOLI_RATIO BETWEEN 35 AND 50 THEN '35%<P≤50%'
			 WHEN SMAOLI_RATIO BETWEEN 50 AND 65 THEN '50%<P≤65%'
			 ELSE 'P>65%' END AS SMAOLI_RATIO_CLASSFIY
FROM 
(SELECT
	T1.ACCMO,
	T1.SMDM_PRODUCT_NUM,
	SUM( T1.NETAMT_NO1 ) AS NETAMT_NO,
	SUM( T1.MAOALI ) AS SMAOLI,
	ROUND(SUM( T1.MAOALI ) /SUM( T1.NETAMT_NO1 ) *100,1) AS SMAOLI_RATIO
	FROM
	(
	SELECT
		ACCMO,
		COMPID,
	IF
		( MDM_PRODUCT_NUM2 = '无主码', WARECODE, MDM_PRODUCT_NUM2 ) AS SMDM_PRODUCT_NUM,
		NETAMT_NO1,
		ROUND( NETAMT_NO1 - PURAMT_NO1, 1 ) AS MAOALI 
	FROM
   dm_sale_bus_pro_udtp
  
	) T1
GROUP BY
	T1.ACCMO,
	T1.SMDM_PRODUCT_NUM)T1)T1
	GROUP BY
	T1.SMDM_PRODUCT_NUM,
 T1.SMAOLI_RATIO_CLASSFIY)T1
 GROUP BY
   T1.SMAOLI_RATIO_CLASSFIY;
limit 10 


DROP TABLE IF EXISTS DM_MALI_RATIO_REPORT;
CREATE TABLE  DM_MALI_RATIO_REPORT AS 
SELECT
 T1.COMP_CLASSIFY2,
   T1.SMAOLI_RATIO_CLASSFIY,
--  SUM(T1.COUNT19) AS MDM_COUNT19,
 SUM(T1.COUNT20) AS MDM_COUNT20,
--  ROUND(SUM(T1.NETAMT_NO19)/10000,1) AS NETAMT_NO19,
 ROUND(SUM(T1.NETAMT_NO20)/10000,1) AS NETAMT_NO20,
--  ROUND(SUM(T1.SMAOLI19)/10000,1) AS SMAOLI19,
 ROUND(SUM(T1.SMAOLI20)/10000,1)  AS SMAOLI20
FROM 
(SELECT
 T1.SMDM_PRODUCT_NUM,
 T1.SMAOLI_RATIO_CLASSFIY,
 T1.COMP_CLASSIFY2,
--  MAX(IF(T1.ACCMO = '2019-09',1,0)) AS COUNT19,
MAX(IF(T1.ACCMO = '2020-09',1,0)) AS COUNT20,
--  MAX(IF(T1.ACCMO = '2019-09',T1.NETAMT_NO,0)) AS NETAMT_NO19,
MAX(IF(T1.ACCMO = '2020-09',T1.NETAMT_NO,0)) AS NETAMT_NO20,
--  MAX(IF(T1.ACCMO = '2019-09',T1.SMAOLI,0)) AS SMAOLI19,
 MAX(IF(T1.ACCMO = '2020-09',T1.SMAOLI,0)) AS SMAOLI20
FROM 
(SELECT 
T1.ACCMO,
	T1.SMDM_PRODUCT_NUM,
	T1.COMP_CLASSIFY2,
	T1.NETAMT_NO,
	T1.SMAOLI,
	CASE WHEN SMAOLI_RATIO<0 THEN 'P≤0%'
	     WHEN SMAOLI_RATIO BETWEEN 0 AND 10 THEN '0%<P≤10%'
			 WHEN SMAOLI_RATIO BETWEEN 10 AND 35 THEN '10%<P≤35%'
			 WHEN SMAOLI_RATIO BETWEEN 35 AND 50 THEN '35%<P≤50%'
			 WHEN SMAOLI_RATIO BETWEEN 50 AND 65 THEN '50%<P≤65%'
			 ELSE 'P>65%' END AS SMAOLI_RATIO_CLASSFIY
FROM 
(SELECT
	T1.ACCMO,
	T1.COMP_CLASSIFY2,
	T1.SMDM_PRODUCT_NUM,
	SUM( T1.NETAMT_NO1 ) AS NETAMT_NO,
	SUM( T1.MAOALI ) AS SMAOLI,
	ROUND(SUM( T1.MAOALI ) /SUM( T1.NETAMT_NO1 ) *100,1) AS SMAOLI_RATIO
	FROM
	(
	SELECT
		T1.ACCMO,
		T1.COMPID,
		T2.COMP_CLASSIFY2,
	IF
		( T1.MDM_PRODUCT_NUM2 = '无主码', T1.WARECODE, T1.MDM_PRODUCT_NUM2 ) AS SMDM_PRODUCT_NUM,
		T1.NETAMT_NO1,
		ROUND( T1.NETAMT_NO1 - T1.PURAMT_NO1, 1 ) AS MAOALI 
	FROM
   dm_sale_bus_pro_udtp T1
  INNER JOIN (SELECT COMPID,COMP_CLASSIFY2 FROM dim_dxh_company WHERE COMP_CLASSIFY1 IN ('北京','山东','华东区域','武汉三九') )T2 ON T1.COMPID = T2.COMPID
	WHERE T1.ACCMO = '2020-09'
	) T1
GROUP BY
	T1.ACCMO,
	T1.COMP_CLASSIFY2,
	T1.SMDM_PRODUCT_NUM)T1)T1
	GROUP BY
	T1.SMDM_PRODUCT_NUM,
 T1.SMAOLI_RATIO_CLASSFIY,
 T1.COMP_CLASSIFY2)T1
 GROUP BY
    T1.COMP_CLASSIFY2,
   T1.SMAOLI_RATIO_CLASSFIY;





-- 库存周转天
SELECT
  -- T2.COMP_CLASSIFY1,
	T2.STARTEY_CLASSIFY,
  T1.ACCMO,
	T1.COMPID,
	T1.NETAMT_NO,
	T1.STORE_SUM
FROM 
(SELECT
	ACCMO,
	COMPID,
	SUM( NETAMT_NO1 ) AS NETAMT_NO,
	SUM( NETAMT_NO1 * SUMTYQ / SALEQTY1 ) AS STORE_SUM 
FROM
	(SELECT T1.* FROM  ods_sale_pro_quart09 T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart09_ T1
UNION ALL 
SELECT T1.* FROM  ods_sale_pro_quart08 T1 )t1
GROUP BY
  ACCMO,
	COMPID
having ACCMO REGEXP '09' )T1
	LEFT JOIN dim_dxh_company ON T1.COMPID = T2.COMPID
	
	
	
	-- 库存效果
	SELECT 
 T1.COMP_CLASSIFY1,
  T1.STORE_MONTH,
 SUM( T1.PURAMT_NO1) AS PURAMT_NO1
FROM 
(SELECT 
 T1.COMPID,
 T2.COMP_CLASSIFY1,
 T2.STARTEY_CLASSIFY,
 CASE WHEN T1.STORE_MONTH>12 THEN '12M' ELSE T1.STORE_MONTH END AS STORE_MONTH,
 T1.PURAMT_NO1
FROM
(SELECT
	COMPID,
	ROUND( WAREQTY * PURPRICE, 1 ) AS PURAMT_NO1,
	ROUND( DATEDIFF( INVALIDATE, SYSDATE())/ 30+1,0) AS STORE_MONTH 
FROM
	ods_t_store_detail0901)T1
LEFT JOIN dim_dxh_company T2 ON T1.COMPID=T2.COMPID)T1
GROUP BY
 T1.COMP_CLASSIFY1,
  T1.STORE_MONTH;
	
	
	
	-- 会员销售数据
SELECT
	T1.STARTEY_CLASSIFY,
	T1.COMP_CLASSIFY2,
-- 	T1.COMPID,
-- 	sum( T1.MEM_COUNT ) AS MEM_COUNT,
-- 	sum( T1.MEM_COUNT_HY ) AS MEM_COUNT_HY,
	ROUND( SUM( T1.MEMBER_AMT )/10000, 1 ) AS MEMBER_AMT,
	sum( T1.MEMBER_CNT ) AS MEMBER_CNT,
	sum( T1.MEMBER_DCNT ) AS MEMBER_DCNT,
	T2.`当月销售金额`,
	T2.TO_KLL
FROM
	(
	SELECT
-- 		T1.STARTEY_CLASSIFY,
-- 		T1.COMP_CLASSIFY2,
		T2.STARTEY_CLASSIFY,
		T2.COMP_CLASSIFY2,
-- 		T1.COMPID,
-- 		T3.MEM_COUNT,
-- 		T3.MEM_COUNT_HY,
		ROUND( SUM( T1.NETSUM_NO ), 1 ) AS MEMBER_AMT,
		sum( T1.salecount ) AS MEMBER_CNT,
		COUNT( DISTINCT T1.MEMBERCARDNO ) AS MEMBER_DCNT 
	FROM
		(
		SELECT
-- 			T2.STARTEY_CLASSIFY,
-- 			T2.COMP_CLASSIFY2,
			T1.COMPID,
			T1.NETSUM_NO,
			T1.salecount,
			T1.MEMBERCARDNO 
		FROM
			ods_t_rpt_sale_memcard_sum T1
-- 			INNER JOIN ( SELECT COMPID, COMP_CLASSIFY2, STARTEY_CLASSIFY FROM dim_dxh_company WHERE COMP_CLASSIFY2 REGEXP '北京|山东|武汉|浙江|江苏' ) T2 ON T1.COMPID = T2.COMPID 
			INNER JOIN ( SELECT BUSNO FROM dim_dxh_busi WHERE COMP_CLASSIFY1 REGEXP '北京|山东|武汉|华东' AND ORG_DTP_TYPE REGEXP '社区药房' ) T3 ON T1.busno = T3.busno
			WHERE ACCDATE REGEXP '2020-09'
		) T1
		INNER JOIN ( SELECT COMPID, COMP_CLASSIFY2, STARTEY_CLASSIFY FROM dim_dxh_company WHERE COMP_CLASSIFY2 REGEXP '北京|山东|武汉|浙江|江苏' ) T2 ON T1.COMPID = T2.COMPID 
	GROUP BY
		T2.STARTEY_CLASSIFY,
		T2.COMP_CLASSIFY2)t1
	LEFT JOIN dm_mali_sale_report T2 ON T1.COMP_CLASSIFY2 = T2.省区划分 
	GROUP BY
		T1.STARTEY_CLASSIFY,
	T1.COMP_CLASSIFY2)T1;
	
	
	-- 会员销售数据
SELECT
	T1.STARTEY_CLASSIFY,
	T1.COMP_CLASSIFY2,
-- 	T1.COMPID,
-- 	sum( T1.MEM_COUNT ) AS MEM_COUNT,
-- 	sum( T1.MEM_COUNT_HY ) AS MEM_COUNT_HY,
	ROUND( SUM( T1.MEMBER_AMT )/10000, 1 ) AS MEMBER_AMT,
	sum( T1.MEMBER_CNT ) AS MEMBER_CNT,
	sum( T1.MEMBER_DCNT ) AS MEMBER_DCNT,
	T2.`当月销售金额`,
	T2.TO_KLL
FROM
	(
	SELECT
-- 		T1.STARTEY_CLASSIFY,
-- 		T1.COMP_CLASSIFY2,
		T2.STARTEY_CLASSIFY,
		T2.COMP_CLASSIFY2,
-- 		T1.COMPID,
-- 		T3.MEM_COUNT,
-- 		T3.MEM_COUNT_HY,
		ROUND( SUM( T1.NETSUM_NO ), 1 ) AS MEMBER_AMT,
		sum( T1.salecount ) AS MEMBER_CNT,
		COUNT( DISTINCT T1.MEMBERCARDNO ) AS MEMBER_DCNT 
	FROM
		(
		SELECT
-- 			T2.STARTEY_CLASSIFY,
-- 			T2.COMP_CLASSIFY2,
			T1.COMPID,
			T1.NETSUM_NO,
			T1.salecount,
			T1.MEMBERCARDNO 
		FROM
			ods_t_rpt_sale_memcard_sum T1
-- 			INNER JOIN ( SELECT COMPID, COMP_CLASSIFY2, STARTEY_CLASSIFY FROM dim_dxh_company WHERE COMP_CLASSIFY2 REGEXP '北京|山东|武汉|浙江|江苏' ) T2 ON T1.COMPID = T2.COMPID 
-- 			INNER JOIN ( SELECT BUSNO FROM dim_dxh_busi WHERE COMP_CLASSIFY1 REGEXP '北京|山东|武汉|华东' AND ORG_DTP_TYPE REGEXP '社区药房' ) T3 ON T1.busno = T3.busno
			WHERE ACCDATE REGEXP '2020-09'
		) T1
		INNER JOIN ( SELECT COMPID, COMP_CLASSIFY2, STARTEY_CLASSIFY FROM dim_dxh_company WHERE STARTEY_CLASSIFY<>'无' ) T2 ON T1.COMPID = T2.COMPID 
	GROUP BY
		T2.STARTEY_CLASSIFY,
		T2.COMP_CLASSIFY2)t1
	LEFT JOIN dm_mali_sale_report T2 ON T1.COMP_CLASSIFY2 = T2.省区划分 
	GROUP BY
		T1.STARTEY_CLASSIFY,
	T1.COMP_CLASSIFY2)T1
	
	
	-- 会员工卡现象
CREATE TABLE 
SELECT 
-- 	T1.STARTEY_CLASSIFY,
-- 	T1.COMP_CLASSIFY2,
	T1.MEM_COUNT,
-- 	T1.BUY_COUNT,
	COUNT(T1.MEMBERCARDNO) AS MEM_PCNT,
	SUM(T1.BUY_COUNT) AS SBUY_COUNT,
	SUM(T1.MEM_NETSUM) AS SMEM_NETSUM,
	SUM(T1.NET_SUM)/SUM(T1.STD_SUM) AS MEM_RATIO
FROM
(SELECT
 	T1.STARTEY_CLASSIFY,
	T1.COMP_CLASSIFY2,
	T1.COMPID,
	T1.MEMBERCARDNO,
  IF(BUY_COUNT<50,BUY_COUNT,'异常') AS MEM_COUNT,
	T1.BUY_COUNT,
	T1.MEM_NETSUM,
	T1.NET_SUM,
	T1.STD_SUM
FROM 
(SELECT
	T1.STARTEY_CLASSIFY,
	T1.COMP_CLASSIFY2,
	T1.COMPID,
	T1.MEMBERCARDNO,
	SUM( t1.SALECOUNT ) AS BUY_COUNT,
	SUM( T1.NETSUM_NO ) AS MEM_NETSUM,
	SUM( T1.NETSUM) AS NET_SUM,
	SUM( T1.STDSUM) AS STD_SUM
FROM
	(
	SELECT
		T2.STARTEY_CLASSIFY,
		T2.COMP_CLASSIFY2,
		T1.busno,
		T1.COMPID,
		T1.STDSUM,
		T1.NETSUM,
		T1.NETSUM_NO,
		T1.MEMBERCARDNO,
		t1.SALECOUNT
	FROM
		ods_t_rpt_sale_memcard_sum T1
		INNER JOIN ( SELECT COMPID, COMP_CLASSIFY2, STARTEY_CLASSIFY FROM dim_dxh_company WHERE COMP_CLASSIFY2 regexp '北京|武汉|山东|江苏|浙江') T2 ON T1.COMPID = T2.COMPID 
		WHERE ACCDATE REGEXP '2020-09'
	) T1 
-- 		INNER JOIN (SELECT BUSNO FROM DIM_DXH_BUSI WHERE ORG_DTP_TYPE regexp '社区药房' AND ORG_SALE_STATUS = '在营' AND COMP_CLASSIFY1 REGEXP '北京|武汉|山东|华东') T2 ON T1.BUSNO = T2.BUSNO
GROUP BY
	T1.STARTEY_CLASSIFY,
	T1.COMP_CLASSIFY2,
	T1.COMPID,
	T1.MEMBERCARDNO 
ORDER BY
	BUY_COUNT DESC
	limit 20)T1
-- where
-- 	BUY_COUNT>200
	)T1
	GROUP BY
-- 		T1.STARTEY_CLASSIFY,
-- 	T1.COMP_CLASSIFY2,
-- 	T1.COMPID,
	T1.MEM_COUNT;
-- 	T1.BUY_COUNT;

	
	-- 医保与双通道
	SELECT * FROM dm_sale_bus_pro_dtp
	limit 10 
	
	
	
-- 产品线集中度情况-基础数据
DROP TABLE IF EXISTS DM_PRO_TOP10_RATIO;
CREATE TABLE DM_PRO_TOP10_RATIO AS 
SELECT
  T1.*
FROM 
(SELECT 
  T1.COMP_CLASSIFY2,
	T1.SMDM_PRODUCT_NUM, 
  T1.MDM_PRO_SALE,
	IF
		( @class = t1.COMP_CLASSIFY2, @rank := @rank + 1, @rank := 1 ) AS rank,
		@class := t1.COMP_CLASSIFY2 AS g
FROM 
(SELECT 
  T1.COMP_CLASSIFY2,
	T1.SMDM_PRODUCT_NUM, 
	ROUND(SUM(T1.NETAMT_NO1 ),2) AS MDM_PRO_SALE
FROM
(SELECT
  T3.COMP_CLASSIFY2,
	T1.COMPID,
	T1.BUSNO,
IF( T1.MDM_PRODUCT_NUM2 IS NULL, T1.WARECODE, T1.MDM_PRODUCT_NUM2) AS SMDM_PRODUCT_NUM,
	T1.WARENAME,
	T1.NETAMT_NO1 
FROM
	(SELECT
	T1.* 
FROM
	ods_sale_pro_quart09 T1
	INNER JOIN ( SELECT BUSNO FROM DIM_DXH_BUSI WHERE COMP_CLASSIFY1 REGEXP '北京|武汉|山东|华东' AND ORG_SALE_STATUS = '在营' AND ORG_DTP_TYPE = '社区药房') T2 ON T1.BUSNO = T2.BUSNO 
WHERE
	T1.ACCMO REGEXP '2020-09') T1
-- INNER JOIN ( SELECT BUSNO FROM DIM_DXH_BUSI WHERE ORG_DTP_TYPE = '专业药房' ) T2 ON T1.BUSNO = T2.BUSNO
LEFT JOIN ( SELECT COMPID,COMP_CLASSIFY2 FROM DIM_DXH_COMPANY  ) T3 ON T1.COMPID = T3.COMPID
)T1
GROUP BY
  T1.COMP_CLASSIFY2,
	T1.SMDM_PRODUCT_NUM
ORDER BY T1.COMP_CLASSIFY2,MDM_PRO_SALE DESC)t1,
(SELECT @class := NULL, @rank := 0) t2)T1
LIMIT 10


-- 产品线集中度累计求和

SELECT
	T1.COMP_CLASSIFY2,
  SUM(IF(T1.RANK<@NUM, T1.MDM_PRO_SALE,0)) AS TOP_SALE,
	SUM( T1.MDM_PRO_SALE ) AS SALE_ALL,
	ROUND(SUM(IF(T1.RANK<@NUM, T1.MDM_PRO_SALE,0))/SUM( T1.MDM_PRO_SALE )*100,1) AS TOP_RATIO
FROM
	DM_PRO_TOP10_RATIO T1,
	(SELECT @NUM:=301)T2
GROUP BY
	T1.COMP_CLASSIFY2



-- 获得TOP5的产品的信息
SELECT
 T1.*,
 T2.`通用名中文名`
FROM 
(SELECT * FROM DM_PRO_TOP10_RATIO WHERE RANK<7)T1
LEFT JOIN ods_ex_pro_mdm T2 ON T1.SMDM_PRODUCT_NUM = T2.`物料主码`
ORDER BY 
t1.COMP_CLASSIFY2,
t1.rank



-- 产品不同公司重合度计算
 SELECT
	 t1.WARECODE,
	 t1.WARENAME,
	 T1.WAREID,
	 t1.COMPID,
	 t1.WAREQTY,
	 T1.PURPRICE,
	 T2.MDM_PRODUCT_NUM
FROM 
(SELECT
	 t1.WARECODE,
	 t1.WARENAME,
	 T1.WAREID,
	 t1.COMPID,
	 t1.WAREQTY,
	 T1.PURPRICE
FROM
		dw_shop_store t1
	INNER JOIN (
	SELECT
	compid
	FROM
    dim_dxh_company
	WHERE
	COMP_CLASSIFY1 REGEXP '北京|山东|武汉|华东' AND STARTEY_CLASSIFY <>'无') t2 on t1.compid = t2.compid
	WHERE t1.WAREQTY< 284000 )T1
	LEFT JOIN DIM_DXH_WARE ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
	GROUP BY
--   t1.WARECODE
 t1.warename
	ORDER BY
   WARE_COMP_CNT DESC 
	 
	 
-- 产品重合度：销售数据	 
SELECT
t1.WARE_COMP_CNT,
-- COUNT(DISTINCT t1.WARECODE) AS WARE_CNT,
COUNT(DISTINCT t1.WARENAME) AS WARENAME_CNT,
SUM(STORE_PUR ) AS STORE_PUR_SUM
FROM	
	(SELECT
-- 	 t1.WARECODE,
	 t1.WARENAME,
	 T1.WAREID,
	 COUNT(DISTINCT t1.COMPID) AS    WARE_COMP_CNT,
SUM(STORE_PUR) AS STORE_PUR 
FROM 
(SELECT
	 t1.WARECODE,
	 t1.WARENAME,
	 T1.WAREID,
	 t1.COMPID,
	 T1.netamt_no,
	 t1.puramt_no,
	 t1.MDM_PRODUCT_NUM2
FROM
	ods_sale_pro_quart09 t1
	INNER JOIN (
	SELECT
	compid
	FROM
		dim_dxh_company 
	WHERE
	COMP_CLASSIFY1 REGEXP '北京|山东|武汉|华东' AND STARTEY_CLASSIFY <>'无') t2 on t1.compid = t2.compid
	WHERE t1.WAREQTY< 284000 )T1
-- 	LEFT JOIN DIM_DXH_WARE ON T1.COMPID = T2.COMPID AND T1.WAREID = T2.WAREID
	GROUP BY
--   t1.WARECODE
 t1.warename
	ORDER BY
   WARE_COMP_CNT DESC)T1
	 GROUP BY
	 t1.WARE_COMP_CNT
	 
	 
	 
	 
	 
	-- 门店基本情况
	SELECT
	 -- T1.COMP_CLASSIFY1,
	 SUM(IF(T1.ORG_DTP_TYPE = '专业药房',1,0)) AS ORG_P_CNT,
	 SUM(IF(T1.ORG_DTP_TYPE = '社区药房',1,0)) AS ORG_S_CNT,
	 SUM(IF(T1.ORG_DTP_TYPE = '专业药房' AND T1.ORG_MEDTYPE ='是',1,0)) AS ORG_MP_CNT,
	 SUM(IF(T1.ORG_DTP_TYPE = '社区药房' AND T1.ORG_MEDTYPE ='是',1,0)) AS ORG_MS_CNT,
	 SUM(IF(T1.ORG_DTP_TYPE = '专业药房',T1.NETAMT_NO2,0)) AS ORG_P_NAMT,
	 SUM(IF(T1.ORG_DTP_TYPE = '社区药房',T1.NETAMT_NO2,0)) AS ORG_S_NAMT,
	  SUM(IF(T1.ORG_DTP_TYPE = '专业药房' AND T1.ORG_MEDTYPE ='是',T1.NETAMT_NO2,0)) AS ORG_MP_NAMT,
	 SUM(IF(T1.ORG_DTP_TYPE = '社区药房' AND T1.ORG_MEDTYPE ='是',T1.NETAMT_NO2,0)) AS ORG_MS_NAMT
	FROM 
(SELECT
		T1.COMPID,
		T1.BUSNO,
		T1.NETAMT_NO2,
		T2.ORG_MEDTYPE,
		T2.ORG_DTP_TYPE,
		T2.COMP_CLASSIFY1
FROM
	  dm_bus_sale_report T1
	LEFT JOIN	(SELECT
		COMP_CLASSIFY1,
		BUSNO,
		ORG_MEDTYPE,
		ORG_DTP_TYPE 
	FROM
		DIM_DXH_BUSI 
WHERE
	ORG_SALE_STATUS = '在营'
	AND MIN_ACCDATE <'2020-08-01')T2 ON T1.BUSNO = T2.BUSNO
	WHERE 
	NETAMT_NO2 IS NOT NULL)T1
	GROUP BY
	 T1.COMP_CLASSIFY1;
	
	SELECT COMPID,BUSNO,FROM dm_sale_bus_pro_dtp
	
	
	-- 门店基本情况
	SELECT
	  T10.COMP_CLASSIFY2,
		t1.COMPID,
		t1.compname,
		t1.BUSNO,
		t1.NETAMT_NO2,
		t1.LY_NETAMT_NO2,
		t1.MAOLI_NO2,
		t3.PUR_STORE,
		t4.NETAMT2,
		t4.NETSUM2,
		t4.DAYS,
		t4.kll,
		t5.NETAMT_NO50,
		t7.NETAMT_NOMO,
		t6.SPURAMT_6M_NO1,
		t6.SPURAMT_ALL_NO1,
		t8.ORG_USABLEAREA,
		t9.ORG_EMPCOUNT
	FROM
		dm_bus_sale_report t1
		INNER JOIN ( SELECT BUSNO FROM DIM_DXH_BUSI WHERE ORG_SALE_STATUS = '在营' AND ORG_DTP_TYPE = '社区药房'  ) t2 ON t1.BUSNO = t2.BUSNO
		LEFT JOIN dim_dxh_company T10 ON T1.COMPID=T10.COMPID
		LEFT JOIN ( SELECT COMPID, BUSNO, ROUND( SUM( PUR_STORE ), 1 ) AS PUR_STORE FROM dw_shop_store GROUP BY COMPID, BUSNO ) t3 ON t1.busno = t3.busno -- 库存周转天
		LEFT JOIN ( SELECT busno, NETAMT2, NETSUM2, DAYS, kll FROM ods_t_rpt_sale_m WHERE accmonth regexp '2020-09' ) T4 ON t1.busno = t4.busno -- 每日交易量、折扣率
	LEFT JOIN (SELECT 
	 T1.BUSNO,
	 SUM(NETAMT_NO) AS NETAMT_NO50
	FROM
	(SELECT
	T1.*
	FROM 
	(SELECT
  T1.BUSNO,
	T1.SMDM_PRODUCT_NUM,
	SUM( T1.NETAMT_NO1 ) AS NETAMT_NO,
	SUM( T1.MAOALI ) AS SMAOLI,
	ROUND(SUM( T1.MAOALI ) /SUM( T1.NETAMT_NO1 ) *100,1) AS SMAOLI_RATIO
	FROM
	(
	SELECT
		BUSNO,
	IF
		( MDM_PRODUCT_NUM2 = '无主码', WARECODE, MDM_PRODUCT_NUM2 ) AS SMDM_PRODUCT_NUM,
		NETAMT_NO1,
		ROUND( NETAMT_NO1 - PURAMT_NO1, 1 ) AS MAOALI 
	FROM
		dm_sale_bus_pro_all
	WHERE ACCMO = '2020-09'
	) T1
GROUP BY
	T1.BUSNO,
	T1.SMDM_PRODUCT_NUM)T1
	WHERE T1.SMAOLI_RATIO>50)T1
	GROUP BY 
	BUSNO)T5 ON T1.busno = t5.busno -- 50%高毛占比
	LEFT JOIN (SELECT 
	 T1.BUSNO,
	 SUM(NETAMT_NO) AS NETAMT_NOMO
	FROM
	(SELECT
	T1.*
	FROM 
	(SELECT
  T1.BUSNO,
	T1.SMDM_PRODUCT_NUM,
	SUM( T1.NETAMT_NO1 ) AS NETAMT_NO,
	SUM( T1.MAOALI ) AS SMAOLI,
	ROUND(SUM( T1.MAOALI ) /SUM( T1.NETAMT_NO1 ) *100,1) AS SMAOLI_RATIO
	FROM
	(
	SELECT
		BUSNO,
	IF
		( MDM_PRODUCT_NUM2 = '无主码', WARECODE, MDM_PRODUCT_NUM2 ) AS SMDM_PRODUCT_NUM,
		NETAMT_NO1,
		ROUND( NETAMT_NO1 - PURAMT_NO1, 1 ) AS MAOALI 
	FROM
		dm_sale_bus_pro_all
	WHERE ACCMO = '2020-09'
	) T1
GROUP BY
	T1.BUSNO,
	T1.SMDM_PRODUCT_NUM)T1
	WHERE T1.SMAOLI_RATIO<0)T1
	GROUP BY 
	BUSNO)T7 ON T1.busno = t7.busno -- 负毛利占比
	LEFT JOIN 
	    (SELECT
			T1.busno,
			SUM(IF(STORE_MONTH<7,T1.PURAMT_NO1,0)) AS SPURAMT_6M_NO1,
			SUM(T1.PURAMT_NO1) AS SPURAMT_ALL_NO1
			FROM
			(SELECT
					t1.busno,
					T1.WAREID,
					T1.WAREQTY,
					ROUND( T1.WAREQTY * T1.PURPRICE, 1 ) AS PURAMT_NO1,
					ROUND( DATEDIFF( T1.INVALIDATE, SYSDATE())/ 30+1, 0 ) AS STORE_MONTH 
				FROM
					ods_t_store_detail t1
					INNER JOIN ( SELECT STARTEY_CLASSIFY, COMP_CLASSIFY1, COMPID FROM dim_dxh_company WHERE STARTEY_CLASSIFY <> '无' ) T2 ON T1.COMPID = T2.COMPID 
				WHERE
					T1.WAREQTY < 284000)T1
					GROUP BY 
					T1.BUSNO) T6 ON T1.busno = t6.busno -- 6月内近效期占比
LEFT JOIN 
	    (SELECT BUSNO, ORG_USABLEAREA FROM DIM_DXH_BUSI WHERE ORG_USABLEAREA IS NOT NULL ) T8 ON T1.busno = t8.busno -- 营业面积
LEFT JOIN 
	    (SELECT BUSNO, ORG_EMPCOUNT FROM DIM_DXH_BUSI WHERE ORG_USABLEAREA IS NOT NULL ) T9 ON T1.busno = t9.busno -- 营业面积			
WHERE T10.COMP_CLASSIFY2 REGEXP '北京|武汉|山东|江苏|浙江'




-- 商品满足率计算
SELECT
  a.COMPID,
	a.objbusno AS busno,
	e.buyer AS buyer,
	to_char ( a.createtime, 'yyyy-mm' ) AS createmo,
	e.wareid AS wareid,
	max( f.orgshortname ) AS orgname,
	max(
	f_get_username ( e.buyer )) AS buyername,
	max( e.warecode ) AS warecode,
	max( e.warename ) AS warename,
	max( e.warespec ) AS warespec,
	max( e.wareunit ) AS wareunit,
	max(
	f_get_factoryname ( e.factoryid )) AS factoryname,
	sum( b.applyqty ) AS applyqty,
	sum(
		nvl ( d.wareqty, 0 )) AS wareqty,(
	SELECT
		sum( CASE WHEN stallno <> '21011003005' THEN wareqty WHEN stallno = '2101003005' THEN - wareqty END ) 
	FROM
		t_store_d 
	WHERE
		compid = 2101 
		AND wareid = e.wareid 
		AND busno = '21011003' 
		) AS storeqty,(
	SELECT
		sum( wareqty ) 
	FROM
		h2.V_HRBJ_WARE 
	WHERE
		wareid = e.wareid 
	) AS bfqty,
	max(
	f_get_classname ( '68', e.wareid, a.compid )) AS classname 
FROM
	t_distapply_h a
	LEFT JOIN t_distapply_d b ON a.applyno = b.applyno
	LEFT JOIN (
	SELECT
		h.distno,
		h.execdate,
		d.wareid,
		sum( d.wareqty ) wareqty,
		d.srcapplyno 
	FROM
		t_dist_h h,
		t_dist_d d 
	WHERE
		h.distno = d.distno 
		AND h.billcode IN ( 'DIS', 'ADD' ) 
		AND h.STATUS = 1 
	GROUP BY
		h.distno,
		h.execdate,
		d.wareid,
		d.srcapplyno 
	) d ON a.applyno = d.srcapplyno 
	AND b.wareid = d.wareid
	LEFT JOIN t_ware e ON b.wareid = e.wareid 
	AND a.compid = e.compid
	LEFT JOIN s_busi f ON f.busno = a.objbusno 
WHERE
	a.STATUS = 1 
	AND a.billcode = 'APP' 
	AND a.compid = e.compid 
	AND ((
			2101 = 0 
			AND a.compid IN ( SELECT compid FROM s_user WHERE userid = 20703279 )) 
	OR ( a.compid = 2101 )) 
	AND a.compid IN (SELECT 
	) 
	AND (
		trunc ( a.createtime ) >= to_date ( '2020-09-01', 'yyyy-MM-dd' ) 
		AND trunc ( a.createtime ) < to_date ( '2020-09-05', 'yyyy-MM-dd' ) 
	) 
GROUP BY
  a.compid,
	a.objbusno,
	e.buyer,
	to_char ( a.createtime, 'yyyy-mm' ),
	e.wareid





-- 配送满足率
SELECT t_dist_h.distno,
       t_dist_h.srcbusno,
       t_dist_h.objbusno,
       t_dist_h.lastmodify,
       t_dist_h.lasttime,
       t_dist_h.status,
       t_dist_h.execdate,
       t_dist_h.loaddate as loaddate,
       t_dist_d.rowno AS rowno,
       t_ware.warecode AS warecode,
       t_ware.warename AS warename,
       t_ware.warespec AS warespec,
       t_ware.fileno AS fileno,
       t_ware.warekind AS warekind,
       t_ware.wareunit AS wareunit,
       to_char(t_dist_d.batid) || '--' || t_dist_d.makeno || ' -- ' ||t_dist_d.srcstallno AS list,
       t_dist_d.srcstallno AS srcstallno,
       t_dist_d.objstallno AS objstallno,
       t_dist_d.wareqty AS wareqty,
   t_dist_d.purprice AS purprice,
       t_dist_d.makeno AS makeno,
       t_dist_d.makedate AS makedate,
       t_dist_d.srcsaleprice AS srcsaleprice,
       t_dist_d.objsaleprice AS objsaleprice,
       t_dist_d.invalidate AS invalidate,
       t_dist_d.objbusnoqty AS objbusnoqty,
       t_dist_d.monsaleqty AS monsaleqty,
       t_dist_d.avgpurprice AS avgpurprice,
       t_dist_d.distprice AS distprice,
       t_dist_d.storeqty AS storeqty,
       t_dist_d.noticedqty,
       t_dist_d.acceptedqty,
       t_dist_d.loadperature as loadperature,
       t_dist_d.unloadperature as unloadperature,
      f_get_classcode('66',t_dist_d.wareid,t_dist_h.compid) as bandcode3,
  t_dist_h.srcbillcode
 ,t_ware.fileno as w1 ,t_ware_ext.regno as w2,t_ware_ext.prod_lic as w3,t_ware_ext.cjgs, t_ware.factoryname as  factoryname,t_ware.waregeneralname as waregeneralname FROM t_dist_d t_dist_d
  JOIN t_dist_h t_dist_h
    ON t_dist_d.distno = t_dist_h.distno and t_dist_h.billcode='DIS'
  LEFT JOIN v_ware_base t_ware
    ON t_dist_d.wareid = t_ware.wareid
   AND t_dist_h.compid = t_ware.compid ,t_ware_ext t_ware_ext WHERE t_ware_ext.compid=t_ware.compid and t_ware_ext.wareid=t_ware.wareid AND t_dist_h.objbusno in (SELECT busno FROM v_user_busi WHERE compid =2101 AND userid =20703279 and status = 1) AND t_dist_h.compid=2101



