#1、全景描述-订货时间分布
USE temp_data_process;
DROP TABLE 
IF EXISTS jd_temp;
CREATE TABLE jd_temp AS
SELECT
  CONCAT(MONTH(tt.order_time),'月') AS date_month,
  DAYOFMONTH(tt.order_time) AS month_day,
  COUNT(DISTINCT user_id) AS user_num,
  COUNT(DISTINCT order_id) AS order_num,
  ROUND(SUM(tt.order_fee)/1000,2) AS order_fee
FROM
(SELECT
 jj.`订货日期` AS order_time,
 jj.`买家ID` AS user_id,
 jj.`订单编号` AS order_id,
 jj.`订单总金额` AS order_fee
FROM
 jd_shop jj
WHERE
 jj.`订货日期` IS NOT NULL)tt
GROUP BY
date_month,
month_day;


#1、同一买家ID多次购买
USE temp_data_process;
DROP TABLE 
IF EXISTS jd_user;
CREATE TABLE jd_user AS
SELECT
  tt.buyer_id,
  CONCAT(MONTH(tt.order_time),'月') AS date_month,
  DAYOFMONTH(tt.order_time) AS month_day,
  tt.order_id,
  tt.order_time,
  ROUND(tt.order_fee,1) AS order_fee,
  kk.first_pay_time,
  kk.last_pay_time,
  ROUND(kk.ordr_diff/kk.order_cunt,1)AS repurchase,
  kk.ordr_diff,
  kk.order_cunt,
  ROUND(kk.user_fee,2) AS user_fee
FROM
(SELECT
 jj.`订单编号` AS order_id,
 jj.`订货日期` AS order_time,
 jj.`买家ID` AS buyer_id,
 jj.`订单总金额` AS order_fee
 FROM
jd_shop jj)tt
LEFT JOIN
(SELECT
 jj.`买家ID` AS buyer_id,
 MIN(jj.`订货日期`) AS first_pay_time,
 MAX(jj.`订货日期`) AS last_pay_time,
 COUNT(DISTINCT jj.`订单编号`) AS order_cunt,
 DATEDIFF(MAX(jj.`订货日期`),MIN(jj.`订货日期`)) AS ordr_diff,
 SUM(jj.`订单总金额`) AS user_fee
FROM
 jd_shop jj
GROUP BY
buyer_id
ORDER BY
buyer_id)kk
ON tt.buyer_id=kk.buyer_id;


#2、连续相同价格订单价格-疑似刷单
USE temp_data_process;
SET @rownum=0;
DROP TABLE 
IF EXISTS jd_time;
CREATE TABLE jd_time AS
SELECT
  @rownum:=@rownum+1 AS rownum,
  tt.buyer_id,
  CONCAT(MONTH(tt.order_time),'月') AS date_month,
  DAYOFMONTH(tt.order_time) AS month_day,
  tt.order_id,
  tt.order_time,
  tt.order_fee,
  kk.order_num
FROM
(SELECT
 jj.`订单编号` AS order_id,
 jj.`订货日期` AS order_time,
 jj.`买家ID` AS buyer_id,
 ROUND(jj.`订单总金额`) AS order_fee
 FROM
jd_shop jj)tt
LEFT JOIN
(SELECT
 ROUND(jj.`订单总金额`) AS order_fee,
 COUNT(DISTINCT jj.`订单编号`)AS order_num
FROM
 jd_shop jj
GROUP BY
order_fee
ORDER BY
order_num DESC)kk
ON tt.order_fee=kk.order_fee
ORDER BY
order_time DESC;

----------------------------------------------------------------------------------------------------------------------------
-- 3、相同地址-疑似刷单
START TRANSACTION;

USE tag_explore;

DROP TABLE
IF EXISTS kd_trade_brushadd180;

CREATE TABLE kd_trade_brushadd180 AS SELECT
	tt.buyer_id,
	CONCAT(MONTH(tt.order_time), '月') AS date_month,
	DAYOFMONTH(tt.order_time) AS month_day,
	tt.order_id,
	tt.order_time,
	tt.order_payamout,
	tt.order_add
FROM
	(
		SELECT
			-- 选择订单数据条件，数据来源：kd_trade_ext
			cc.sys_trade_id AS order_id,
			cc.pay_time AS order_time,
			cc.sys_customer_id AS buyer_id,
			ROUND(cc.payment, 1) AS order_payamout,
			kk.receiver_address AS order_add
		FROM
			crm_kd.kd_trade cc
		LEFT JOIN crm_kd.kd_trade_ext kk ON cc.sys_trade_id = kk.sys_trade_id
		WHERE
			DATEDIFF(CURDATE(), cc.created) < 181 -- 订单创建日期在18天内
		AND cc.pay_time IS NOT NULL -- 付款日期不为空
		AND cc.trade_status IN (
			'TRADE_BUYER_SIGNED',
			'TRADE_CLOSED',
			'TRADE_CLOSED_BY_TAOBAO',
			'TRADE_FINISHED',
			'WAIT_BUYER_CONFIRM_GOODS'
		) -- 订单状态为已发货及已经完成
		AND cc.plat_from_id <> 597 -- 渠道来源部位淘宝分销
	) tt;

ROLLBACK;
